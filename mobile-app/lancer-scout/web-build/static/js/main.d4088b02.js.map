{"version":3,"file":"static/js/main.d4088b02.js","mappings":"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","sources":["src/constants.js","src/components/ScoutListItem.js","src/components/Button.js","src/scripts/validateSchema.js","src/scripts/storage.js","src/stacks/Default.js","src/components/Input.js","src/scripts/dataBuffer.js","src/stacks/DataEntry.js","src/stacks/UploadSchema.js","src/components/QR.js","src/stacks/OpenQr.js","src/tabs/Match.js","src/tabs/Pit.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// import { initialWindowMetrics } from \"react-native-safe-area-context\"\r\n\r\nconst screen = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    top: 0,\r\n    bottom: 0\r\n    // width: initialWindowMetrics.frame.width - initialWindowMetrics.insets.left - initialWindowMetrics.insets.right,\r\n    // height: initialWindowMetrics.frame.height - initialWindowMetrics.insets.top - initialWindowMetrics.insets.bottom,\r\n    // top: initialWindowMetrics.insets.top,\r\n    // bottom: initialWindowMetrics.insets.bottom\r\n}\r\n\r\nconst colors = {\r\n    white: \"rgb(245, 245, 245)\",\r\n    grey: \"rgb(220, 220, 220)\",\r\n    dark: \"rgb(90, 90, 90)\",\r\n    black: \"rgb(20, 20, 20)\",\r\n    crimson: \"rgb(184, 1, 0)\",\r\n    pink: \"rgb(250, 180, 180)\",\r\n}\r\n\r\nexport {\r\n    screen,\r\n    colors\r\n}","import React, { useRef } from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\n// match id for qr code is same as matchTimestamp so pass it in as one variable\r\nconst MatchListItem = ({ matchTimestamp, data, navigation, mode }) => {\r\n    const pressInOffset = useRef(new Animated.Value(-4)).current\r\n\r\n    const date = new Date(matchTimestamp)\r\n    \r\n    const dateString = date.toDateString() + \" at \" + (date.getHours() % 12) + \":\" + (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) + \" \" + (date.getHours() > 12 ? \"pm\" : \"am\")\r\n\r\n    const handlePress = () => navigation.push(\"OpenQr\", { id: matchTimestamp, data, mode })\r\n\r\n    const handlePressIn = () => {\r\n        Animated.timing(pressInOffset, {\r\n            toValue: 0,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start()\r\n    }\r\n\r\n    const handlePressOut = () => {\r\n        Animated.timing(pressInOffset, {\r\n            toValue: -4,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start()\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\r\n            <View style={styles.wrapper}>\r\n                <View style={styles.undershadow} />\r\n                <Animated.View style={{ ...styles.container, top: pressInOffset }}>\r\n                    <Text style={styles.date}>\r\n                        {\r\n                            dateString\r\n                        }\r\n                    </Text>\r\n                    <FontAwesomeIcon icon={faChevronRight} size={24} color={colors.crimson} />\r\n                </Animated.View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        position: \"relative\",\r\n        marginTop: 10\r\n    },\r\n    undershadow: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: 60,\r\n        backgroundColor: colors.pink,\r\n        borderRadius: 10\r\n    },\r\n    container: {\r\n        height: 60,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingHorizontal: 20,\r\n        backgroundColor: colors.white,\r\n        borderRadius: 10\r\n    },\r\n    date: {\r\n        fontFamily: \"Open Sans\",\r\n        fontSize: 18,\r\n        color: colors.black\r\n    }\r\n})\r\n\r\nexport default MatchListItem","import React, { useRef } from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\nconst Button = ({ children, handlePress, marginHorizontal=40 }) => {\r\n    const scale = useRef(new Animated.Value(1)).current\r\n\r\n    const handlePressIn = () => {\r\n        Animated.timing(scale, {\r\n            toValue: 0.8,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start()\r\n    }\r\n\r\n    const handlePressOut = () => {\r\n        Animated.timing(scale, {\r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: false\r\n        }).start()\r\n    }\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\r\n            <View style={{ ...styles.wrapper , marginHorizontal }}>\r\n                <Animated.View style={{ ...styles.container, transform: [{ scale }] }}>\r\n                    <Text style={styles.text}>\r\n                        {\r\n                            children\r\n                        }\r\n                    </Text>\r\n                </Animated.View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        position: \"relative\",\r\n        marginTop: 10,\r\n        marginBottom: 0\r\n    },\r\n    container: {\r\n        height: 60,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: colors.pink,\r\n        borderRadius: 10,\r\n        borderWidth: 2,\r\n        borderColor: colors.crimson\r\n    },\r\n    text: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"500\",\r\n        fontSize: 18,\r\n        color: colors.black\r\n    }\r\n})\r\n\r\nexport default Button","// const validateSchema = (schema) => {\r\n//     if (!Array.isArray(schema)) return {\r\n//         success: false,\r\n//         reason: `Schema must be of type array. Found schema of type ${typeof schema}.`\r\n//     }\r\n\r\n//     schema.forEach((prompt, index) => {\r\n//         if (typeof prompt != \"object\") return {\r\n//             success: false,\r\n//             reason: `Prompts must be of type object. Found prompt of type ${typeof prompt} at index ${index}.`\r\n//         }\r\n\r\n//         const promptKeys = Object.keys(prompt)\r\n\r\n//         if (!promptKeys.includes(\"title\")) return {\r\n//             success: false,\r\n//             reason: `Prompts must include a title. No title found in prompt at index ${index}.`\r\n//         }\r\n\r\n//         if (typeof prompt.title != \"string\") return {\r\n//             success: false,\r\n//             reason: `Prompts' title must be of type string. Found title of type ${typeof prompt.type} in prompt at index ${index}.`\r\n//         }\r\n\r\n//         if (!promptKeys.includes(\"ui\")) return {\r\n//             success: false,\r\n//             reason: `Prompts must include a ui. No ui found in prompt at index ${index}.`\r\n//         }\r\n\r\n//         if (typeof prompt.ui != \"object\") return {\r\n//             success: false,\r\n//             reason: `Prompts' ui must be of type object. Found ui of type ${typeof prompt.ui} in prompt at index ${index}.`\r\n//         }\r\n\r\n//         const uiKeys = Object.keys(prompt.ui)\r\n\r\n//         if (!uiKeys.includes(\"type\")) return {\r\n//             success: false,\r\n//             reason: `Prompts' ui must include a type. No type found in ui of prompt at index ${index}.`\r\n//         }\r\n\r\n//         if (![\"header\", \"text\", \"number\", \"timer\", \"slider\", \"toggle\", \"radio\", \"dropdown\"].includes(prompt.ui.type)) return {\r\n//             success: false,\r\n//             reason: `Prompts' ui must include a type equal to \"header\", \"text\", \"number\", \"timer\", \"slider\", \"toggle\", \"radio\", or \"dropdown\". Found type with value ${prompt.ui.type} in ui of prompt at index ${index}.`\r\n//         }\r\n        \r\n//         if(prompt.ui.type != \"header\"){\r\n//             if (!promptKeys.includes(\"dataType\")) return {\r\n//                 success: false,\r\n//                 reason: `Non-header prompts must include a dataType. No dataType found in prompt at index ${index}.`\r\n//             }\r\n\r\n//             if (![\"boolean\", \"string\", \"4bit\", \"6bit\", \"8bit\", \"16bit\"].includes(prompt.dataType)) return {\r\n//                 success: false,\r\n//                 reason: `Non-header prompts must include a dataType equal to \"boolean\", \"string\", \"4bit\", \"6bit\", \"8bit\", or \"16bit\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\r\n//             }\r\n\r\n//             if (prompt.ui.type == \"toggle\" && prompt.dataType != \"boolean\") return {\r\n//                 success: false,\r\n//                 reason: `Toggle prompts must have a dataType of \"boolean\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\r\n//             }\r\n\r\n//             if (prompt.ui.type == \"text\" && prompt.dataType != \"string\") return {\r\n//                 success: false,\r\n//                 reason: `Text prompts must have a dataType of \"string\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\r\n//             }\r\n\r\n//             if ((prompt.ui.type != \"toggle\" && prompt.ui.type != \"text\") && ![\"4bit\", \"6bit\", \"8bit\", \"16bit\"].includes(prompt.dataType)) return {\r\n//                 success: false,\r\n//                 reason: `Number or option based prompts must have a numeric dataType (\"4bit\", \"6bit\", \"8bit\", or \"16bit\"). Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\r\n//             }\r\n\r\n//             if(prompt.ui.type == \"radio\" || prompt.ui.type == \"dropdown\"){\r\n//                 if (!uiKeys.includes(\"options\")) return {\r\n//                     success: false,\r\n//                     reason: `Option based prompts' ui must include options. No options found in prompt at index ${index}.`\r\n//                 }\r\n\r\n//                 if (!Array.isArray(prompt.ui.options)) return {\r\n//                     success: false,\r\n//                     reason: `Option based prompt ui options must be of type array. Found options of type ${prompt.ui.options} in ui of prompt at index ${index}.`\r\n//                 }\r\n\r\n//                 if (!prompt.ui.options.every(option => typeof option == \"string\")) return {\r\n//                     success: false,\r\n//                     reason: `Option based prompt ui options must be of type string. Found option with a non-string type in ui of prompt at index ${index}.`\r\n//                 }\r\n\r\n//                 if (prompt.ui.options.length == 0) return {\r\n//                     success: false,\r\n//                     reason: `Option based prompt ui options array must not be empty. Found empty options in ui of prompt at index ${index}.`\r\n//                 }\r\n//             }\r\n//         }\r\n//     })\r\n\r\n//     return {\r\n//         success: true\r\n//     }\r\n// }\r\n\r\nconst validateSchema = (schema) => {\r\n    return {\r\n        success: true\r\n    }\r\n}\r\n\r\nexport default validateSchema","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nimport validateSchema from \"./validateSchema\"\r\n\r\nconst getSchema = async (mode) => {\r\n    const allKeys = await AsyncStorage.getAllKeys()\r\n\r\n    if(allKeys.includes(\"lancer-scout-schema-\" + mode)){\r\n        const schema = await AsyncStorage.getItem(\"lancer-scout-schema-\" + mode)\r\n\r\n        const json = JSON.parse(schema)\r\n\r\n        return json\r\n    } else {\r\n        await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, JSON.stringify([]))\r\n\r\n        return []\r\n    }\r\n}\r\n\r\nconst setSchema = async (schema, mode) => {\r\n    const status = validateSchema(JSON.parse(schema))\r\n\r\n    if (status.success) await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, schema)\r\n\r\n    return status\r\n}\r\n\r\nconst getEntries = async (mode) => {\r\n    const allKeys = await AsyncStorage.getAllKeys()\r\n\r\n    if(allKeys.includes(\"lancer-scout-entries-\" + mode)){\r\n        const entries = await AsyncStorage.getItem(\"lancer-scout-entries-\" + mode)\r\n\r\n        const json = JSON.parse(entries)\r\n\r\n        return json\r\n    } else {\r\n        await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify([]))\r\n\r\n        return []\r\n    }\r\n}\r\n\r\nconst addEntry = async (entry, mode) => {\r\n    const entries = await getEntries(mode)\r\n\r\n    const updated = [ ...entries, entry ]\r\n\r\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\r\n}\r\n\r\nconst removeEntry = async (id, mode) => {\r\n    const entries = await getEntries(mode)\r\n\r\n    const updated = entries.filter(e => e.id != id)\r\n\r\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\r\n}\r\n\r\nexport {\r\n    getSchema,\r\n    setSchema,\r\n    getEntries,\r\n    addEntry,\r\n    removeEntry\r\n}","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { SafeAreaView, View, ScrollView, Text, StyleSheet } from \"react-native\"\r\n\r\nimport MatchListItem from \"../components/ScoutListItem\"\r\nimport Button from \"../components/Button\"\r\n\r\nimport { getSchema, getEntries } from \"../scripts/storage\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\nconst DefaultStack = ({ route, navigation }) => {\r\n    const { mode } = route.params\r\n\r\n    const [form, setForm] = useState([])\r\n    const [entries, setEntries] = useState([])\r\n\r\n    useEffect(() => {\r\n        getSchema(mode).then(setForm)\r\n        getEntries(mode).then(setEntries)\r\n\r\n        navigation.addListener(\"state\", () => {\r\n            getSchema(mode).then(setForm)\r\n            getEntries(mode).then(setEntries)\r\n        })\r\n    }, [])\r\n\r\n    const matchListItemRenders = []\r\n\r\n    entries.reverse().forEach(entry => {\r\n        matchListItemRenders.push(\r\n            <MatchListItem key={entry.id} matchTimestamp={entry.id} data={entry.buffer} navigation={navigation} mode={mode} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <SafeAreaView style={styles.wrapper}>\r\n            <View style={styles.headerContainer}>\r\n                <Text style={styles.headerText}>{ mode } Scouting Hub</Text>\r\n            </View>\r\n            <ScrollView style={{ backgroundColor: colors.grey }}>\r\n                <Button handlePress={() => navigation.push(\"DataEntry\", { form, mode })}>Start { mode } Scouting</Button>\r\n                <Button handlePress={() => navigation.push(\"UploadSchema\", { mode })}>Upload { mode } Schema</Button>\r\n                <View style={{ height: 6 }} />\r\n                {\r\n                    matchListItemRenders.length > 0 ?\r\n                        matchListItemRenders :\r\n                        <React.Fragment>\r\n                            <View style={{ marginTop: 4, height: 1, backgroundColor: colors.crimson }} />\r\n                            <Text style={styles.emptyList}>No Scouting Entries Yet</Text>\r\n                        </React.Fragment>\r\n                }\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        flex: 1,\r\n        backgroundColor: colors.white\r\n    },\r\n    headerContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: 70,\r\n        backgroundColor: colors.white,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.crimson\r\n    },\r\n    headerText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 24,\r\n        color: colors.black\r\n    },\r\n    emptyList: {\r\n        marginTop: 20,\r\n        fontFamily: \"Open Sans\",\r\n        fontSize: 24,\r\n        color: colors.crimson,\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nexport default DefaultStack","import React, { useState, useEffect, useRef } from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, View, Text, TextInput, StyleSheet } from \"react-native\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\r\nimport { faMinus, faPlus, faRepeat, faPlay, faPause, faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport format from \"format-duration\"\r\n\r\nimport { screen, colors } from \"../constants\"\r\n\r\nconst FormHeader = ({ title, setValue }) => {\r\n    return (\r\n        <View style={styles.headerContainer} onLayout={(e) => {\r\n            console.log(e.nativeEvent.layout.y)\r\n            setValue(e.nativeEvent.layout.y)\r\n        }}>\r\n            <Text style={styles.headerText} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormTextInput = ({ title, placeholder, value, setValue }) => {\r\n    const inputRef = useRef()\r\n\r\n    const focus = () => inputRef.current.focus()\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <TouchableWithoutFeedback onPress={focus}>\r\n                <View style={styles.inputTextContainer}>\r\n                    <TextInput ref={inputRef} placeholder={placeholder} value={value} onChangeText={setValue} style={styles.inputText} placeholderTextColor={colors.dark} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline />\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormNumberInput = ({ title, value, setValue }) => {\r\n    const inputRef = useRef()\r\n\r\n    const focus = () => inputRef.current.focus()\r\n\r\n    const setInputValue = (v) => {\r\n        const num = parseFloat(v)\r\n        if(isNaN(num)){\r\n            setValue(0)\r\n        } else {\r\n            setValue(num)\r\n        }\r\n    }\r\n\r\n    const minus = () => {\r\n        if(value > 0){\r\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n            setValue(value - 1)\r\n        }\r\n    }\r\n\r\n    const plus = () => {\r\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        setValue(value + 1)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <View style={styles.multiControlInputContainer}>\r\n                <TouchableWithoutFeedback onPress={focus}>\r\n                    <View style={styles.inputTextContainer}>\r\n                        <TextInput ref={inputRef} value={value.toString()} onChangeText={setInputValue} style={styles.inputText} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline keyboardType={\"numeric\"} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                <TouchableWithoutFeedback onPress={minus}>\r\n                    <View style={styles.controlButton}>\r\n                        <FontAwesomeIcon icon={faMinus} color={colors.crimson} size={22} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                <TouchableWithoutFeedback onPress={plus}>\r\n                    <View style={styles.controlButton}>\r\n                        <FontAwesomeIcon icon={faPlus} color={colors.crimson} size={22} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormTimerInput = ({ title, value, setValue }) => {\r\n    const [running, setRunning] = useState(false)\r\n\r\n    const [startTimestep, setStartTimestep] = useState(0)\r\n    const [endTimestep, setEndTimestep] = useState(0)\r\n\r\n    const timeElapsed = running ? endTimestep - startTimestep : value\r\n\r\n    useEffect(() => {\r\n        if(running){\r\n            const interval = setInterval(() => setEndTimestep(Date.now()), 500)\r\n\r\n            return () => clearInterval(interval)\r\n        }\r\n    }, [running])\r\n\r\n    const restart = () => {\r\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        setValue(0)\r\n        setStartTimestep(Date.now())\r\n        setEndTimestep(Date.now())\r\n    }\r\n\r\n    const start = () => {\r\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        setRunning(true)\r\n        setStartTimestep(Date.now() - timeElapsed)\r\n        setEndTimestep(Date.now())\r\n    }\r\n\r\n    const stop = () => {\r\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        setRunning(false)\r\n        setValue(timeElapsed)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <View style={styles.multiControlInputContainer}>\r\n                <View style={styles.inputTextContainer}>\r\n                    <Text style={styles.inputText}>\r\n                        {\r\n                            format(timeElapsed, { leading: true })\r\n                        }\r\n                    </Text>\r\n                </View>\r\n                <TouchableWithoutFeedback onPress={restart}>\r\n                    <View style={styles.controlButton}>\r\n                        <FontAwesomeIcon icon={faRepeat} color={colors.crimson} size={22} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                <TouchableWithoutFeedback onPress={running ? stop : start}>\r\n                    <View style={styles.controlButton}>\r\n                        <FontAwesomeIcon icon={running ? faPause : faPlay} color={colors.crimson} size={22} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormSliderInput = ({ title, value, setValue }) => {\r\n    const min = 0\r\n    const max = 10\r\n    const step = 1\r\n\r\n    const [touchX, setTouchX] = useState(0)\r\n\r\n    const handleTouchStart = (e) => {\r\n        setTouchX(e.nativeEvent.touches[0].pageX)\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n        const screenWidth = screen.width - 60 - 10\r\n        const deltaX = e.nativeEvent.touches[0].pageX - touchX\r\n\r\n        const newValue = Math.max(Math.min(value + (deltaX / screenWidth) * (max - min), max), min)\r\n\r\n        if(Math.round(value / step) != Math.round(newValue / step)){\r\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        }\r\n\r\n        setValue(newValue)\r\n        setTouchX(e.nativeEvent.touches[0].pageX)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <View style={{ width: \"100%\" }}>\r\n                <View style={[{ width: 40, alignItems: \"center\" }, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) - 5 }] }]}>\r\n                    <Text style={styles.sliderLabel}>\r\n                        {\r\n                            step * Math.round(value / step)\r\n                        }\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n            <TouchableWithoutFeedback>\r\n                <View style={styles.sliderInputContainer}>\r\n                    <View style={styles.sliderTrackBar} />\r\n                    <TouchableWithoutFeedback>\r\n                        <View style={[styles.sliderInputThumb, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) }] }]} onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} />\r\n                    </TouchableWithoutFeedback>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormToggleInput = ({ title, value, setValue }) => {\r\n    const setToFalse = () => {\r\n        if(value){\r\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        }\r\n        setValue(false)\r\n    }\r\n\r\n    const setToTrue = () => {\r\n        if(!value){\r\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        }\r\n        setValue(true)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <View style={styles.toggleButtonsContainer}>\r\n                <TouchableWithoutFeedback onPress={setToFalse}>\r\n                    <View style={[styles.toggleButtonContainer, { borderColor: !value ? colors.crimson : colors.white, backgroundColor: !value ? colors.pink : colors.white }]}>\r\n                        <Text style={styles.toggleButtonText}>False</Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                <TouchableWithoutFeedback onPress={setToTrue}>\r\n                    <View style={[styles.toggleButtonContainer, { borderColor: value ? colors.crimson : colors.white, backgroundColor: value ? colors.pink : colors.white }]}>\r\n                        <Text style={styles.toggleButtonText}>True</Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormRadioInput = ({ title, options, value, setValue }) => {\r\n    const optionRenders = []\r\n\r\n    options.forEach((option, index) => {\r\n        const setSelectedOption = () => {\r\n            if(value != index){\r\n                // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n            }\r\n            setValue(index)\r\n        }\r\n\r\n        optionRenders.push(\r\n            <TouchableWithoutFeedback key={index} onPress={setSelectedOption}>\r\n                <View style={[styles.radioOptionButtonContainer, { borderColor: index == value ? colors.crimson : colors.white, backgroundColor: index == value ? colors.pink : colors.white }]}>\r\n                    <Text style={styles.radioOptionButtonText}>\r\n                        {\r\n                            option\r\n                        }\r\n                    </Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <View style={[styles.inputContainer, { paddingBottom: 0 }]}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            {\r\n                optionRenders\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst FormDropdownInput = ({ title, options, value, setValue }) => {\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n    const toggleMenu = () => {\r\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n        setMenuOpen(!menuOpen)\r\n    }\r\n\r\n    const optionRenders = []\r\n    options.forEach((option, index) => {\r\n        const selectOption = () => {\r\n            setValue(index)\r\n            toggleMenu()\r\n        }\r\n\r\n        optionRenders.push(\r\n            <TouchableWithoutFeedback key={index} onPress={selectOption}>\r\n                <View style={[styles.dropdownOptionContainer, { backgroundColor: index == value ? colors.pink : colors.white, borderColor: index == value ? colors.crimson : colors.white }]}>\r\n                    <Text style={styles.dropdownOptionText}>\r\n                        {\r\n                            option\r\n                        }\r\n                    </Text>\r\n                </View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <View style={styles.inputContainer}>\r\n            <Text style={styles.inputTitle} numberOfLines={1}>\r\n                {\r\n                    title\r\n                }\r\n            </Text>\r\n            <View style={[styles.multiControlInputContainer, { marginBottom: menuOpen ? 5 : 0 }]}>\r\n                <View style={{ ...styles.inputTextContainer, height: 48, justifyContent: \"center\" }}>\r\n                    <Text style={styles.inputText}>\r\n                        {\r\n                            options[value]\r\n                        }\r\n                    </Text>\r\n                </View>\r\n                <TouchableWithoutFeedback onPress={toggleMenu}>\r\n                    <View style={styles.controlButton}>\r\n                        <FontAwesomeIcon icon={menuOpen ? faChevronUp : faChevronDown} color={colors.crimson} size={22} />\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n            {\r\n                menuOpen && optionRenders\r\n            }\r\n        </View>\r\n    )\r\n}\r\n\r\nconst Input = (props) => {\r\n    let Component = () => null\r\n\r\n    switch(props.ui.type){\r\n        case \"header\":\r\n            Component = FormHeader\r\n            break\r\n        case \"text\":\r\n            Component = FormTextInput\r\n            break\r\n        case \"number\":\r\n            Component = FormNumberInput\r\n            break\r\n        case \"timer\":\r\n            Component = FormTimerInput\r\n            break\r\n        case \"slider\":\r\n            Component = FormSliderInput\r\n            break\r\n        case \"toggle\":\r\n            Component = FormToggleInput\r\n            break\r\n        case \"radio\":\r\n            Component = FormRadioInput\r\n            break\r\n        case \"dropdown\":\r\n            Component = FormDropdownInput\r\n            break\r\n    }\r\n\r\n    return Component({ ...props, ...props.ui, title: props.title })\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        width: \"100%\",\r\n        height: 60,\r\n        marginTop: 10,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    headerText: {\r\n        paddingHorizontal: 20,\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 24,\r\n        color: colors.crimson,\r\n        textDecorationLine: \"underline\",\r\n        textDecorationColor: colors.crimson\r\n    },\r\n    inputContainer: {\r\n        margin: 10,\r\n        marginBottom: 0,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: colors.white\r\n    },\r\n    inputTitle: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"400\",\r\n        color: colors.black,\r\n        fontSize: 20,\r\n        marginBottom: 10\r\n    },\r\n    inputTextContainer: {\r\n        flex: 1,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: colors.crimson,\r\n        borderRadius: 10\r\n    },\r\n    inputText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"500\",\r\n        fontStyle: \"italic\",\r\n        fontSize: 16,\r\n        color: colors.black\r\n    },\r\n    multiControlInputContainer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\"\r\n    },\r\n    controlButton: {\r\n        width: 48,\r\n        height: 48,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginLeft: 10,\r\n        borderWidth: 1,\r\n        borderColor: colors.crimson,\r\n        borderRadius: 10\r\n    },\r\n    sliderLabel: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 16,\r\n        color: colors.black,\r\n        marginTop: 5\r\n    },\r\n    sliderInputContainer: {\r\n        width: \"100%\",\r\n        height: 30,\r\n        marginTop: 5,\r\n        justifyContent: \"center\"\r\n    },\r\n    sliderInputThumb: {\r\n        position: \"absolute\",\r\n        width: 30,\r\n        height: 30,\r\n        borderWidth: 2.5,\r\n        borderColor: colors.crimson,\r\n        borderRadius: 10,\r\n        backgroundColor: colors.pink\r\n    },\r\n    sliderTrackBar: {\r\n        width: \"100%\",\r\n        height: 4,\r\n        borderRadius: 2,\r\n        backgroundColor: colors.dark\r\n    },\r\n    toggleButtonsContainer: {\r\n        width: \"100%\",\r\n        height: 50,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    toggleButtonContainer: {\r\n        width: 0.5 * (screen.width - 40) - 5,\r\n        height: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: 10,\r\n        borderWidth: 2.5\r\n    },\r\n    toggleButtonText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 20,\r\n        color: colors.black\r\n    },\r\n    radioOptionButtonContainer: {\r\n        width: \"100%\",\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        borderWidth: 2.5\r\n    },\r\n    radioOptionButtonText: {\r\n        paddingHorizontal: 20,\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 18,\r\n        color: colors.black\r\n    },\r\n    dropdownOptionContainer: {\r\n        marginTop: 5,\r\n        padding: 10,\r\n        borderWidth: 2.5,\r\n        borderRadius: 10\r\n    },\r\n    dropdownOptionText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 16,\r\n        color: colors.black\r\n    }\r\n})\r\n\r\nexport default Input","import stringHash from \"string-hash\"\r\n\r\n// generate a bit array of the given size with the given number stored in binary (bit order right to left) \r\nconst generateBitArrayFromNumber = (number, bitCount) => {\r\n    let mutatedNumber = number // subtract as bits are calculated\r\n\r\n    const bitArray = new Array(bitCount).fill(0)\r\n\r\n    for(let i = 0;i<bitCount;i++){\r\n        const bitOffset = (bitCount - 1) - i // bits are read right to left\r\n\r\n        const bitAtOffsetShouldBeTrue = (mutatedNumber / 2) % 1 != 0\r\n\r\n        if(bitAtOffsetShouldBeTrue){\r\n            bitArray[bitOffset] = 1\r\n\r\n            mutatedNumber--\r\n        }\r\n\r\n        mutatedNumber /= 2\r\n    }\r\n\r\n    return bitArray\r\n}\r\n\r\n// generate a number from the base2 data in the given bit array (bit order right to left)\r\nconst generateNumberFromBitArray = (bitArray) => {\r\n    let number = 0\r\n\r\n    for(let i = 0;i<bitArray.length;i++){\r\n        const power = Math.pow(2, i)\r\n\r\n        const bitOffset = (bitArray.length - 1) - i // bits are read from right to left\r\n\r\n        number += power * bitArray[bitOffset]\r\n    }\r\n\r\n    return number\r\n}\r\n\r\n// generate a bit array representing the given character in custom base6\r\nconst generateBitArrayFromCharacter = (char) => {\r\n    const alphabetChars = \"abcdefghijklmnopqrstuvwxyz\"\r\n    const alphabetOffset = 0\r\n    \r\n    const numericChars = \"0123456789\"\r\n    const numericOffset = alphabetOffset + alphabetChars.length\r\n\r\n    const symbolChars = \",.!?()\\'\\\" \"\r\n    const symbolOffset = numericOffset + numericChars.length\r\n\r\n    let numberValue = Math.pow(2, 6) - 1 // unknown character\r\n\r\n    if(alphabetChars.includes(char)){\r\n        numberValue = alphabetOffset + alphabetChars.indexOf(char)\r\n    } else if(numericChars.includes(char)){\r\n        numberValue = numericOffset + numericChars.indexOf(char)\r\n    } else if(symbolChars.includes(char)){\r\n        numberValue = symbolOffset + symbolChars.indexOf(char)\r\n    }\r\n\r\n    return generateBitArrayFromNumber(numberValue, 6)\r\n}\r\n\r\n// generate a character from the custom base6 data in the given bit array\r\nconst generateCharacterFromBitArray = (bitArray) => {\r\n    const chars = \"abcdefghijklmnopqrstuvwxyz0123456789,.!?()\\'\\\" \"\r\n\r\n    const charCode = generateNumberFromBitArray(bitArray)\r\n\r\n    if(charCode < chars.length){\r\n        return chars[charCode]\r\n    } else {\r\n        // unknown character\r\n        // technically we should validate that charCode is 2**6 - 1 but it doesn't really matter\r\n        return '\\u25A1'\r\n    }\r\n}\r\n\r\n// format string for 6bit storage\r\nconst encodeString = (string) => {\r\n    const lowercase = string.toLowerCase()\r\n    const spacesMerged = lowercase.replace(/\\s\\s+/g, \" \")\r\n\r\n    let punctuationSpacesRemoved = spacesMerged\r\n\r\n    const punctuationMarks = [\",\", \".\", \"!\", \"?\"]\r\n\r\n    punctuationMarks.forEach(punctuationMark => {\r\n        punctuationSpacesRemoved = punctuationSpacesRemoved.split(punctuationMark).map(s => s.trim()).join(punctuationMark)\r\n    })\r\n    \r\n    return punctuationSpacesRemoved\r\n}\r\n\r\n// format string after 6bit storage\r\nconst decodeString = (string) => {\r\n    const withSpacesAfterCommas = string.split(\",\").map((s, index) => index == 0 ? s : \" \" + s).join(\",\")\r\n\r\n    let withSentenceFormatting = withSpacesAfterCommas\r\n\r\n    const sentenceDelimiters = [\".\", \"!\", \"?\"]\r\n\r\n    sentenceDelimiters.forEach(sentenceDelimiter => {\r\n        withSentenceFormatting = withSentenceFormatting.split(sentenceDelimiter).map((s, index) => {\r\n            if (s.length == 0) return \"\"\r\n\r\n            s = s.slice(0, 1).toUpperCase() + s.slice(1)\r\n\r\n            return index == 0 ? s : \" \" + s\r\n        }).join(sentenceDelimiter)\r\n    })\r\n\r\n    return withSentenceFormatting\r\n}\r\n\r\n// generate a bit array representing the given string stored in a base8 size header and custom base6 chars\r\nconst generateBitArrayFromString = (string) => {\r\n    const encodedString = encodeString(string)\r\n\r\n    const sizeBitArray = generateBitArrayFromNumber(encodedString.length, 8)\r\n\r\n    const characterBitArrays = []\r\n\r\n    for(let i = 0;i<encodedString.length;i++){\r\n        const char = encodedString[i]\r\n\r\n        characterBitArrays.push(generateBitArrayFromCharacter(char))\r\n    }\r\n\r\n    const stringBitArray = [sizeBitArray, ...characterBitArrays].flat()\r\n\r\n    return stringBitArray\r\n}\r\n\r\n// generate a string from the custom base6 data in the given bit array\r\n// bit array should not include the base8 size header\r\nconst generateStringFromBitArray = (bitArray) => {\r\n    const chars = []\r\n\r\n    for(let i = 0;i<bitArray.length / 6;i++){\r\n        const charOffset = 6 * i\r\n\r\n        const charBitArray = []\r\n\r\n        for(let j = 0;j<6;j++){\r\n            const bitOffset = j\r\n\r\n            charBitArray.push(bitArray[charOffset + bitOffset])\r\n        }\r\n\r\n        chars.push(generateCharacterFromBitArray(charBitArray))\r\n    }\r\n\r\n    return decodeString(chars.join(\"\"))\r\n}\r\n\r\n// generate a bit array from the hash of the given form\r\nconst generateBitArrayFromFormHash = (form) => {\r\n    const hashInput = JSON.stringify(form)\r\n\r\n    const hashOutput = stringHash(hashInput)\r\n\r\n    return generateBitArrayFromNumber(hashOutput, 32)\r\n}\r\n\r\n// generate a bit array from the given value and data type identifier\r\nconst generateBitArrayFromValueAndType = (value, type) => {\r\n    if(type == \"boolean\"){\r\n        return [ value ? 1 : 0 ]\r\n    } else if(type == \"string\"){\r\n        return generateBitArrayFromString(value)\r\n    } else if(type == \"1bit\"){\r\n        return generateBitArrayFromNumber(value, 1)\r\n    } else if(type == \"2bit\"){\r\n        return generateBitArrayFromNumber(value, 2)\r\n    } else if(type == \"4bit\"){\r\n        return generateBitArrayFromNumber(value, 4)\r\n    } else if(type == \"6bit\"){\r\n        return generateBitArrayFromNumber(value, 6)\r\n    } else if(type == \"8bit\"){\r\n        return generateBitArrayFromNumber(value, 8)\r\n    } else if(type == \"8bit\"){\r\n        return generateBitArrayFromNumber(value, 8)\r\n    }\r\n}\r\n\r\n// generate a value from the given bit array and data type identifier\r\nconst generateValueFromBitArrayAndType = (bitArray, type) => {\r\n    if(type == \"boolean\"){\r\n        return bitArray[0] == 1\r\n    } else if(type == \"string\"){\r\n        return generateStringFromBitArray(bitArray)\r\n    } else if(type == \"1bit\" || type == \"2bit\" || type == \"4bit\" || type == \"6bit\" || type == \"8bit\" || type == \"16bit\"){\r\n        return generateNumberFromBitArray(bitArray)\r\n    }\r\n}\r\n\r\n// generate a bit array from the given data\r\nconst generateBitArrayFromData = (data) => {\r\n    const hashBitArray = generateBitArrayFromFormHash(data.form)\r\n\r\n    const idBitArray = generateBitArrayFromNumber(data.id, 16)\r\n\r\n    const entryBitArrays = [] // array of bit arrays for each entry in the data\r\n\r\n    if (data.entries.length != data.form.length) throw new Error(\"Expected data and form to be the same size\")\r\n\r\n    for(let i = 0;i<data.entries.length;i++){\r\n        const value = data.entries[i]\r\n        const type = data.form[i].dataType\r\n\r\n        entryBitArrays.push(generateBitArrayFromValueAndType(value, type))\r\n    }\r\n\r\n    const bitArray = [hashBitArray, idBitArray, ...entryBitArrays].flat()\r\n\r\n    return bitArray\r\n}\r\n\r\n// generate data from the given bit array and form\r\nconst generateDataFromBitArray = (bitArray, form) => {\r\n    const hash = generateNumberFromBitArray(bitArray.splice(0, 32))\r\n    const expectedHash = generateNumberFromBitArray(generateBitArrayFromFormHash(form))\r\n\r\n    if (hash != expectedHash) return null\r\n\r\n    const id = generateNumberFromBitArray(bitArray.splice(0, 16))\r\n\r\n    const entries = []\r\n\r\n    for(let i = 0;i<form.length;i++){\r\n        const type = form[i].dataType\r\n\r\n        let entrySize = 0\r\n\r\n        if(type == \"boolean\"){\r\n            entrySize = 1\r\n        } else if(type == \"string\"){\r\n            const stringSizeHeader = bitArray.splice(0, 8)\r\n            \r\n            entrySize = 6 * generateNumberFromBitArray(stringSizeHeader)\r\n        } else if(type == \"1bit\"){\r\n            entrySize = 1\r\n        } else if(type == \"2bit\"){\r\n            entrySize = 2\r\n        } else if(type == \"4bit\"){\r\n            entrySize = 4\r\n        } else if(type == \"6bit\"){\r\n            entrySize = 6\r\n        } else if(type == \"8bit\"){\r\n            entrySize = 8\r\n        } else if(type == \"16bit\"){\r\n            entrySize = 16\r\n        }\r\n\r\n        const entryBitArray = bitArray.splice(0, entrySize)\r\n        const entryValue = generateValueFromBitArrayAndType(entryBitArray, type)\r\n\r\n        entries.push(entryValue)\r\n    }\r\n\r\n    return {\r\n        id,\r\n        entries\r\n    }\r\n}\r\n\r\n// convert the given bit array to an array of bytes (byte order left to right, bit order right to left)\r\nconst bitArrayToBuffer = (bitArray) => {\r\n    const bytes = []\r\n\r\n    // pad to make sure last byte is full\r\n    const paddingNeeded = 8 - (bitArray.length % 8)\r\n\r\n    for(let i = 0;i<paddingNeeded;i++){\r\n        bitArray.push(0)\r\n    }\r\n\r\n    for(let i = 0;i<bitArray.length / 8;i++){\r\n        const byteOffset = 8 * i\r\n\r\n        const byteBitArray = []\r\n\r\n        for(let j = 0;j<8;j++){\r\n            const bitOffset = j\r\n\r\n            byteBitArray.push(bitArray[byteOffset + bitOffset])\r\n        }\r\n        \r\n        bytes.push(generateNumberFromBitArray(byteBitArray))\r\n    }\r\n\r\n    return String.fromCharCode(...bytes)\r\n}\r\n\r\n// convert the given buffer of bytes to an array of bits (byte order left to right, but order right to left)\r\nconst bufferToBitArray = (buffer) => {\r\n    const byteArray = []\r\n\r\n    for(let i = 0;i<buffer.length;i++){\r\n        byteArray.push(generateBitArrayFromNumber(buffer[i], 8))\r\n    }\r\n    \r\n    const bitArray = byteArray.flat()\r\n\r\n    return bitArray\r\n}\r\n\r\n// generate a buffer from the given data\r\nconst generateBufferFromData = (data) => {\r\n    const buffer = bitArrayToBuffer(generateBitArrayFromData(data))\r\n\r\n    return buffer\r\n}\r\n\r\n// generate data from the given buffer and form\r\nconst generateDataFromBuffer = (buffer, form) => {\r\n    const bitArray = bufferToBitArray(buffer)\r\n\r\n    const data = generateDataFromBitArray(bitArray, form)\r\n\r\n    return data\r\n}\r\n\r\nexport {\r\n    generateBufferFromData,\r\n    generateDataFromBuffer\r\n}","import React, { useRef, useState, useEffect, useCallback } from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, ScrollView, View, Text, StyleSheet } from \"react-native\"\r\n\r\nimport Input from \"../components/Input\"\r\n\r\nimport { generateBufferFromData } from \"../scripts/dataBuffer\"\r\nimport { addEntry } from \"../scripts/storage\"\r\n\r\nimport { screen, colors } from \"../constants\"\r\n\r\nconst DataEntryStack = ({ route, navigation }) => {\r\n    const ref = useRef()\r\n\r\n    const { form, mode } = route.params\r\n    const [inputState, setInputState] = useState([]) // stores relative render y of headers, stored here for convenience\r\n\r\n    const rawKeyboardHeight = 80 // hardcoded since dynamic one causes internal memory leak\r\n    const keyboardHeight = Math.max(0, rawKeyboardHeight - (70 + screen.bottom))\r\n\r\n    const [scrollable, setScrollable] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const defaultInputs = []\r\n\r\n        form.forEach(input => {\r\n            let defaultInput = null\r\n            \r\n            switch(input.ui.type){\r\n                case \"text\":\r\n                    defaultInput = \"\"\r\n                    break\r\n                case \"number\":\r\n                    defaultInput = 0\r\n                    break\r\n                case \"timer\":\r\n                    defaultInput = 0\r\n                    break\r\n                case \"slider\":\r\n                    defaultInput = 0\r\n                    break\r\n                case \"toggle\":\r\n                    defaultInput = false\r\n                    break\r\n                case \"radio\":\r\n                    defaultInput = 0\r\n                    break\r\n                case \"dropdown\":\r\n                    defaultInput = 0\r\n                    break\r\n            }\r\n\r\n            defaultInputs.push(defaultInput)\r\n        })\r\n\r\n        setInputState(defaultInputs)\r\n    }, [])\r\n\r\n    const setInput = (index, value) => {\r\n        setInputState((iS) => {\r\n            const temp = [...iS]\r\n            temp[index] = value\r\n            return temp\r\n        })\r\n    }\r\n\r\n    const [saved, setSaved] = useState(false)\r\n    const saveInputs = () => {\r\n        if (saved) return\r\n        \r\n        setSaved(true)\r\n\r\n        const id = Date.now()\r\n\r\n        const inputs = []\r\n        form.forEach((question, index) => {\r\n            if (question.ui.type != \"header\") inputs.push(typeof inputState[index] == \"number\" ? Math.round(inputState[index]) : inputState[index])\r\n        })\r\n\r\n        const buffer = generateBufferFromData({\r\n            form: form.filter(question => question.ui.type != \"header\"),\r\n            id,\r\n            entries: inputs\r\n        })\r\n\r\n        addEntry({\r\n            id,\r\n            buffer\r\n        }, mode).then(navigation.goBack)\r\n    }\r\n\r\n    const linkRenders = []\r\n    form.forEach((item, index) => {\r\n        if(item.ui.type == \"header\"){\r\n            linkRenders.push(\r\n                <TouchableWithoutFeedback key={index} onPress={() => {\r\n                    // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\r\n                    ref.current.scrollTo({\r\n                        x: 0,\r\n                        y: inputState[index] - 10,\r\n                        animated: true\r\n                    })\r\n                }}>\r\n                    <View style={styles.linkContainer}>\r\n                        <Text style={styles.linkText}>\r\n                            {\r\n                                item.title\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            )\r\n        }\r\n    })\r\n\r\n    const inputRenders = []\r\n    inputState.forEach((item, index) => {\r\n        inputRenders.push(\r\n            <Input key={index} value={item} setValue={value => setInput(index, value)} {...form[index]} setScrollable={setScrollable} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            {\r\n                linkRenders.length > 0 ? (\r\n                    <View><ScrollView style={styles.linksContainer} contentContainerStyle={{ paddingRight: 10 }} horizontal showsHorizontalScrollIndicator={false} children={linkRenders} /></View>\r\n                ) : <View style={{ height: 1, backgroundColor: colors.crimson }} />\r\n            }\r\n            <ScrollView ref={ref} style={styles.inputsContainer} showsVerticalScrollIndicator={false} scrollEnabled={scrollable}>\r\n                {\r\n                    inputRenders\r\n                }\r\n                <TouchableWithoutFeedback onPress={saveInputs}>\r\n                    <View style={[styles.buttonContainer, { marginBottom: 20 + rawKeyboardHeight }]}>\r\n                        <Text style={styles.buttonText}>Save</Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputsContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: colors.grey\r\n    },\r\n    linksContainer: {\r\n        width: \"100%\",\r\n        height: 80,\r\n        paddingVertical: 10,\r\n        backgroundColor: colors.white,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: colors.crimson\r\n    },\r\n    linkContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingHorizontal: 20,\r\n        marginLeft: 10,\r\n        backgroundColor: colors.pink,\r\n        borderRadius: 10,\r\n        borderWidth: 2,\r\n        borderColor: colors.crimson\r\n    },\r\n    linkText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"500\",\r\n        fontSize: 18,\r\n        color: colors.black\r\n    },\r\n    buttonContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: 120,\r\n        margin: 20,\r\n        borderRadius: 20,\r\n        borderWidth: 2,\r\n        borderColor: colors.crimson,\r\n        backgroundColor: colors.white\r\n    },\r\n    buttonText: {\r\n        fontFamily: \"Open Sans\",\r\n        fontWeight: \"700\",\r\n        fontSize: 20,\r\n        color: colors.crimson\r\n    }\r\n})\r\n\r\nexport default DataEntryStack","import React, { useState } from \"react\"\r\n\r\nimport { View, TextInput, StyleSheet, Alert, TouchableWithoutFeedback, Keyboard } from \"react-native\"\r\n\r\nimport Button from \"../components/Button\"\r\n\r\nimport { setSchema } from \"../scripts/storage\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\nconst UploadSchemaStack = ({ route, navigation }) => {\r\n    const { mode } = route.params\r\n\r\n    const [inputSchema, setInputSchema] = useState(\"[]\")\r\n\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const uploadSchema = async () => {\r\n        if (uploaded) return\r\n\r\n        setUploaded(true)\r\n\r\n        const status = await setSchema(inputSchema, mode)\r\n\r\n        if(status.success){\r\n            navigation.goBack()\r\n        } else {\r\n            alert(\"Failed To Upload Schema\\n\\n\" + status.reason)\r\n            // Alert.alert(\"Failed To Upload Schema\", status.reason)\r\n\r\n            setUploaded(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        // <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.wrapper}>\r\n                <TextInput style={styles.input} value={inputSchema} onChangeText={setInputSchema} multiline />\r\n                <Button handlePress={uploadSchema}>Upload</Button>\r\n            </View>\r\n        // </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        width: \"100%\",\r\n        flex: 1,\r\n        backgroundColor: colors.white\r\n    },\r\n    input: {\r\n        margin: 10,\r\n        padding: 10,\r\n        maxHeight: 200,\r\n        borderRadius: 10,\r\n        backgroundColor: colors.grey\r\n    }\r\n})\r\n\r\nexport default UploadSchemaStack","import QRCode from \"react-native-qrcode-svg\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\nconst QR = ({ data }) => <QRCode value={data} ecl={\"M\"} size={300} color={colors.black} backgroundColor={colors.white} />\r\n\r\nexport default QR","import React, { useState } from \"react\"\r\n\r\nimport { View, Text, StyleSheet, Alert } from \"react-native\"\r\n\r\nimport QR from \"../components/QR\"\r\nimport Button from \"../components/Button\"\r\n\r\nimport { removeEntry } from \"../scripts/storage\"\r\n\r\nimport { colors } from \"../constants\"\r\n\r\nconst OpenQrStack = ({ route, navigation }) => {\r\n    const { id, data, mode } = route.params\r\n\r\n    const [deleted, setDeleted] = useState(false)\r\n    const handleDelete = () => {\r\n        if (deleted) return\r\n\r\n        setDeleted(true)\r\n\r\n        confirm(\"Are You Sure?\\n\\nIf you delete this qr code all of the scouting information for this entry will be lost.\") ? removeEntry(id, mode).then(navigation.goBack) : setDeleted(false)\r\n\r\n        // Alert.alert(\"Are You Sure?\", \"If you delete this qr code all of the scouting information for this entry will be lost.\", [\r\n        //     {\r\n        //         text: \"Cancel\",\r\n        //         style: \"cancel\",\r\n        //         onPress: () => setDeleted(false)\r\n        //     },\r\n        //     {\r\n        //         text: \"Yes\",\r\n        //         onPress: () => removeEntry(id, mode).then(navigation.goBack)\r\n        //     }\r\n        // ])\r\n    }\r\n\r\n    return (\r\n        <View style={styles.wrapper}>\r\n            <Text style={styles.label}>Scan To Upload</Text>\r\n            <QR data={data} />\r\n            <View style={{ width: 300, marginTop: 10 }}>\r\n                <Button handlePress={handleDelete} marginHorizontal={0}>Delete</Button>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        width: \"100%\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: colors.white\r\n    },\r\n    label: {\r\n        fontFamily: \"Open Sans\",\r\n        fontSize: 24,\r\n        color: colors.black,\r\n        marginBottom: 20\r\n    }\r\n})\r\n\r\nexport default OpenQrStack","import React from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\n\r\nimport DefaultStack from \"../stacks/Default\"\r\nimport DataEntry from \"../stacks/DataEntry\"\r\nimport UploadSchema from \"../stacks/UploadSchema\"\r\nimport OpenQr from \"../stacks/OpenQr\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { screen, colors } from \"../constants\"\r\n\r\nconst MatchTab = () => {\r\n    const Stack = createStackNavigator()\r\n    \r\n    return (\r\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\r\n            headerShown: false\r\n        }}>\r\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Match\" }} component={DefaultStack} />\r\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\r\n                headerShown: true,\r\n                headerTitle: \"Scouting Form\",\r\n                headerStyle: {\r\n                    height: 70,\r\n                    backgroundColor: colors.white,\r\n                    shadowOpacity: 0\r\n                },\r\n                headerTitleStyle: {\r\n                    fontFamily: \"Open Sans\",\r\n                    fontWeight: \"700\",\r\n                    fontSize: 24,\r\n                    color: colors.black\r\n                },\r\n                gestureEnabled: false,\r\n                headerLeft: ({ onPress }) => {\r\n                    return (\r\n                        <TouchableWithoutFeedback onPress={() => {\r\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\r\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\r\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\r\n                            //     {\r\n                            //         text: \"Cancel\",\r\n                            //         style: \"cancel\"\r\n                            //     },\r\n                            //     {\r\n                            //         text: \"Yes\",\r\n                            //         onPress\r\n                            //     }\r\n                            // ])\r\n                        }}>\r\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                    )\r\n                }\r\n            }} />\r\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\r\n                headerShown: true,\r\n                headerTitle: \"Upload Schema\",\r\n                headerStyle: {\r\n                    height: screen.top + 70,\r\n                    backgroundColor: colors.white,\r\n                    shadowOpacity: 0\r\n                },\r\n                headerTitleStyle: {\r\n                    fontFamily: \"Open Sans\",\r\n                    fontWeight: \"700\",\r\n                    fontSize: 24,\r\n                    color: colors.black\r\n                },\r\n                headerLeft: ({ onPress }) => {\r\n                    return (\r\n                        <TouchableWithoutFeedback onPress={() => {\r\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\r\n                            onPress()\r\n                        }}>\r\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                    )\r\n                }\r\n            }} />\r\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\r\n                presentation: \"modal\"\r\n            }} />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default MatchTab","import React from \"react\"\r\n\r\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\n\r\nimport DefaultStack from \"../stacks/Default\"\r\nimport DataEntry from \"../stacks/DataEntry\"\r\nimport UploadSchema from \"../stacks/UploadSchema\"\r\nimport OpenQr from \"../stacks/OpenQr\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { screen, colors } from \"../constants\"\r\n\r\nconst PitTab = () => {\r\n    const Stack = createStackNavigator()\r\n    \r\n    return (\r\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\r\n            headerShown: false\r\n        }}>\r\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Pit\" }} component={DefaultStack} />\r\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\r\n                headerShown: true,\r\n                headerTitle: \"Scouting Form\",\r\n                headerStyle: {\r\n                    height: 70,\r\n                    backgroundColor: colors.white,\r\n                    shadowOpacity: 0\r\n                },\r\n                headerTitleStyle: {\r\n                    fontFamily: \"Open Sans\",\r\n                    fontWeight: \"700\",\r\n                    fontSize: 24,\r\n                    color: colors.black\r\n                },\r\n                gestureEnabled: false,\r\n                headerLeft: ({ onPress }) => {\r\n                    return (\r\n                        <TouchableWithoutFeedback onPress={() => {\r\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\r\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\r\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\r\n                            //     {\r\n                            //         text: \"Cancel\",\r\n                            //         style: \"cancel\"\r\n                            //     },\r\n                            //     {\r\n                            //         text: \"Yes\",\r\n                            //         onPress\r\n                            //     }\r\n                            // ])\r\n                        }}>\r\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                    )\r\n                }\r\n            }} />\r\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\r\n                headerShown: true,\r\n                headerTitle: \"Upload Schema\",\r\n                headerStyle: {\r\n                    height: screen.top + 70,\r\n                    backgroundColor: colors.white,\r\n                    shadowOpacity: 0\r\n                },\r\n                headerTitleStyle: {\r\n                    fontFamily: \"Open Sans\",\r\n                    fontWeight: \"700\",\r\n                    fontSize: 24,\r\n                    color: colors.black\r\n                },\r\n                headerLeft: ({ onPress }) => {\r\n                    return (\r\n                        <TouchableWithoutFeedback onPress={() => {\r\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\r\n                            onPress()\r\n                        }}>\r\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\r\n                            </View>\r\n                        </TouchableWithoutFeedback>\r\n                    )\r\n                }\r\n            }} />\r\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\r\n                presentation: \"modal\"\r\n            }} />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default PitTab","import React, { useCallback } from \"react\"\nimport { View } from \"react-native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as SplashScreen from \"expo-splash-screen\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChessKnight, faComments, faGear } from \"@fortawesome/free-solid-svg-icons\"\n\nimport MatchTab from \"./src/tabs/Match\"\nimport PitTab from \"./src/tabs/Pit\"\n\nimport { colors } from \"./src/constants\"\n\nif (\"serviceWorker\" in navigator) navigator.serviceWorker.register(\"./sw.js\")\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({ \"Open Sans\": require(\"./assets/fonts/OpenSans.ttf\") })\n    \n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) await SplashScreen.hideAsync()\n    }, [fontsLoaded])\n    \n    if (!fontsLoaded) return null\n\n    const Tab = createBottomTabNavigator()\n\n    const icons = {\n        \"Match\": faChessKnight,\n        \"Pit\": faComments,\n        \"Settings\": faGear\n    }\n    \n    return (\n        <View style={{ flex: 1 }} onLayout={onLayoutRootView}>\n            <NavigationContainer>\n                <Tab.Navigator initialRouteName={\"Match\"} screenOptions={({ route }) => {\n                    return {\n                        headerShown: false,\n                        tabBarInactiveTintColor: colors.dark,\n                        tabBarActiveTintColor: colors.crimson,\n                        tabBarStyle: {\n                            paddingTop: 10,\n                            marginBottom: 10,\n                            borderTopWidth: 1,\n                            borderTopColor: colors.crimson\n                        },\n                        tabBarLabelStyle: {\n                            marginTop: 6\n                        },\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <FontAwesomeIcon icon={icons[route.name]} color={color} size={size} />\n                            )\n                        }\n                    }\n                }}>\n                    <Tab.Screen name={\"Match\"} component={MatchTab} />\n                    <Tab.Screen name={\"Pit\"} component={PitTab} />\n                </Tab.Navigator>\n            </NavigationContainer>\n        </View>\n    )\n}\n\nexport default App","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [205], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screen","window","innerWidth","innerHeight","colors","styles","StyleSheet","create","wrapper","position","marginTop","undershadow","width","height","backgroundColor","borderRadius","container","flexDirection","alignItems","justifyContent","paddingHorizontal","date","fontFamily","fontSize","color","_ref","matchTimestamp","data","navigation","mode","pressInOffset","useRef","Animated","Value","current","Date","dateString","toDateString","getHours","getMinutes","_jsx","TouchableWithoutFeedback","onPress","push","id","onPressIn","timing","toValue","duration","useNativeDriver","start","onPressOut","children","_jsxs","View","style","_objectSpread","top","Text","FontAwesomeIcon","icon","faChevronRight","size","marginBottom","borderWidth","borderColor","text","fontWeight","handlePress","_ref$marginHorizontal","marginHorizontal","scale","transform","schema","success","getSchema","_asyncToGenerator","AsyncStorage","getAllKeys","includes","getItem","JSON","parse","setItem","stringify","_x","apply","arguments","setSchema","_ref2","status","validateSchema","_x2","_x3","getEntries","_ref3","entries","_x4","addEntry","_ref4","entry","updated","concat","_toConsumableArray","_x5","_x6","removeEntry","_ref5","filter","e","_x7","_x8","flex","headerContainer","borderBottomWidth","borderBottomColor","headerText","emptyList","textAlign","route","params","_useState","useState","_useState2","_slicedToArray","form","setForm","_useState3","_useState4","setEntries","useEffect","then","addListener","matchListItemRenders","reverse","forEach","MatchListItem","buffer","SafeAreaView","ScrollView","Button","length","React","FormHeader","title","setValue","onLayout","console","log","nativeEvent","layout","y","numberOfLines","FormTextInput","placeholder","value","inputRef","inputContainer","inputTitle","focus","inputTextContainer","TextInput","ref","onChangeText","inputText","placeholderTextColor","cursorColor","selectionColor","multiline","FormNumberInput","multiControlInputContainer","toString","v","num","parseFloat","isNaN","keyboardType","controlButton","faMinus","faPlus","FormTimerInput","running","setRunning","startTimestep","setStartTimestep","_useState5","_useState6","endTimestep","setEndTimestep","timeElapsed","interval","setInterval","now","clearInterval","format","leading","faRepeat","faPause","faPlay","FormSliderInput","_useState7","_useState8","touchX","setTouchX","translateX","Math","round","sliderLabel","sliderInputContainer","sliderTrackBar","sliderInputThumb","onTouchStart","touches","pageX","onTouchMove","screenWidth","deltaX","newValue","max","min","FormToggleInput","_ref6","toggleButtonsContainer","toggleButtonContainer","toggleButtonText","FormRadioInput","_ref7","options","optionRenders","option","index","radioOptionButtonContainer","radioOptionButtonText","paddingBottom","FormDropdownInput","_ref8","_useState9","_useState10","menuOpen","setMenuOpen","toggleMenu","dropdownOptionContainer","dropdownOptionText","faChevronUp","faChevronDown","textDecorationLine","textDecorationColor","margin","padding","fontStyle","marginLeft","props","Component","ui","type","generateBitArrayFromNumber","number","bitCount","mutatedNumber","bitArray","Array","fill","i","generateNumberFromBitArray","pow","generateBitArrayFromCharacter","char","alphabetChars","numericChars","symbolChars","numberValue","indexOf","alphabetOffset","numericOffset","generateBitArrayFromFormHash","hashInput","hashOutput","stringHash","generateBitArrayFromValueAndType","string","encodedString","punctuationSpacesRemoved","toLowerCase","replace","punctuationMark","split","map","s","trim","join","encodeString","sizeBitArray","characterBitArrays","flat","generateBitArrayFromString","generateBufferFromData","bytes","paddingNeeded","byteOffset","byteBitArray","j","bitOffset","String","fromCharCode","bitArrayToBuffer","hashBitArray","idBitArray","entryBitArrays","Error","dataType","generateBitArrayFromData","inputsContainer","flexGrow","linksContainer","paddingVertical","linkContainer","linkText","buttonContainer","buttonText","_route$params","inputState","setInputState","scrollable","setScrollable","defaultInputs","input","defaultInput","saved","setSaved","linkRenders","item","scrollTo","x","animated","inputRenders","Input","iS","temp","setInput","contentContainerStyle","paddingRight","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","scrollEnabled","inputs","question","goBack","maxHeight","inputSchema","setInputSchema","uploaded","setUploaded","uploadSchema","alert","reason","QRCode","ecl","label","deleted","setDeleted","QR","confirm","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","initialParams","component","DefaultStack","DataEntry","headerTitle","headerStyle","shadowOpacity","headerTitleStyle","gestureEnabled","headerLeft","faChevronLeft","UploadSchema","OpenQr","presentation","navigator","serviceWorker","register","_useFonts","useFonts","require","fontsLoaded","onLayoutRootView","useCallback","SplashScreen","Tab","createBottomTabNavigator","icons","faChessKnight","faComments","faGear","NavigationContainer","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarStyle","paddingTop","borderTopWidth","borderTopColor","tabBarLabelStyle","tabBarIcon","MatchTab","PitTab","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}