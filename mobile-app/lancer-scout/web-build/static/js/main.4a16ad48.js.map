{"version":3,"file":"static/js/main.4a16ad48.js","mappings":"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","sources":["src/constants.js","src/components/ScoutListItem.js","src/components/Button.js","src/scripts/validateSchema.js","src/scripts/storage.js","src/stacks/Default.js","src/components/Input.js","src/scripts/dataBuffer.js","src/stacks/DataEntry.js","src/stacks/UploadSchema.js","src/components/QR.js","src/stacks/OpenQr.js","src/tabs/Match.js","src/tabs/Pit.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// import { initialWindowMetrics } from \"react-native-safe-area-context\"\n\nconst screen = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    top: 0,\n    bottom: 0\n    // width: initialWindowMetrics.frame.width - initialWindowMetrics.insets.left - initialWindowMetrics.insets.right,\n    // height: initialWindowMetrics.frame.height - initialWindowMetrics.insets.top - initialWindowMetrics.insets.bottom,\n    // top: initialWindowMetrics.insets.top,\n    // bottom: initialWindowMetrics.insets.bottom\n}\n\nconst colors = {\n    white: \"rgb(245, 245, 245)\",\n    grey: \"rgb(220, 220, 220)\",\n    dark: \"rgb(90, 90, 90)\",\n    black: \"rgb(20, 20, 20)\",\n    crimson: \"rgb(184, 1, 0)\",\n    pink: \"rgb(250, 180, 180)\",\n}\n\nexport {\n    screen,\n    colors\n}","import React, { useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { colors } from \"../constants\"\n\n// match id for qr code is same as matchTimestamp so pass it in as one variable\nconst MatchListItem = ({ matchTimestamp, data, navigation, mode }) => {\n    const pressInOffset = useRef(new Animated.Value(-4)).current\n\n    const date = new Date(matchTimestamp)\n    \n    const dateString = date.toDateString() + \" at \" + (date.getHours() % 12) + \":\" + (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) + \" \" + (date.getHours() > 12 ? \"pm\" : \"am\")\n\n    const handlePress = () => navigation.push(\"OpenQr\", { id: matchTimestamp, data, mode })\n\n    const handlePressIn = () => {\n        Animated.timing(pressInOffset, {\n            toValue: 0,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    const handlePressOut = () => {\n        Animated.timing(pressInOffset, {\n            toValue: -4,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\n            <View style={styles.wrapper}>\n                <View style={styles.undershadow} />\n                <Animated.View style={{ ...styles.container, top: pressInOffset }}>\n                    <Text style={styles.date}>\n                        {\n                            dateString\n                        }\n                    </Text>\n                    <FontAwesomeIcon icon={faChevronRight} size={24} color={colors.crimson} />\n                </Animated.View>\n            </View>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"relative\",\n        marginTop: 10\n    },\n    undershadow: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: 60,\n        backgroundColor: colors.pink,\n        borderRadius: 10\n    },\n    container: {\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 20,\n        backgroundColor: colors.white,\n        borderRadius: 10\n    },\n    date: {\n        fontFamily: \"Open Sans\",\n        fontSize: 18,\n        color: colors.black\n    }\n})\n\nexport default MatchListItem","import React, { useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\n\nimport { colors } from \"../constants\"\n\nconst Button = ({ children, handlePress, marginHorizontal=40 }) => {\n    const scale = useRef(new Animated.Value(1)).current\n\n    const handlePressIn = () => {\n        Animated.timing(scale, {\n            toValue: 0.8,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    const handlePressOut = () => {\n        Animated.timing(scale, {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\n            <View style={{ ...styles.wrapper , marginHorizontal }}>\n                <Animated.View style={{ ...styles.container, transform: [{ scale }] }}>\n                    <Text style={styles.text}>\n                        {\n                            children\n                        }\n                    </Text>\n                </Animated.View>\n            </View>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"relative\",\n        marginTop: 10,\n        marginBottom: 0\n    },\n    container: {\n        height: 60,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.pink,\n        borderRadius: 10,\n        borderWidth: 2,\n        borderColor: colors.crimson\n    },\n    text: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontSize: 18,\n        color: colors.black\n    }\n})\n\nexport default Button","// const validateSchema = (schema) => {\n//     if (!Array.isArray(schema)) return {\n//         success: false,\n//         reason: `Schema must be of type array. Found schema of type ${typeof schema}.`\n//     }\n\n//     schema.forEach((prompt, index) => {\n//         if (typeof prompt != \"object\") return {\n//             success: false,\n//             reason: `Prompts must be of type object. Found prompt of type ${typeof prompt} at index ${index}.`\n//         }\n\n//         const promptKeys = Object.keys(prompt)\n\n//         if (!promptKeys.includes(\"title\")) return {\n//             success: false,\n//             reason: `Prompts must include a title. No title found in prompt at index ${index}.`\n//         }\n\n//         if (typeof prompt.title != \"string\") return {\n//             success: false,\n//             reason: `Prompts' title must be of type string. Found title of type ${typeof prompt.type} in prompt at index ${index}.`\n//         }\n\n//         if (!promptKeys.includes(\"ui\")) return {\n//             success: false,\n//             reason: `Prompts must include a ui. No ui found in prompt at index ${index}.`\n//         }\n\n//         if (typeof prompt.ui != \"object\") return {\n//             success: false,\n//             reason: `Prompts' ui must be of type object. Found ui of type ${typeof prompt.ui} in prompt at index ${index}.`\n//         }\n\n//         const uiKeys = Object.keys(prompt.ui)\n\n//         if (!uiKeys.includes(\"type\")) return {\n//             success: false,\n//             reason: `Prompts' ui must include a type. No type found in ui of prompt at index ${index}.`\n//         }\n\n//         if (![\"header\", \"text\", \"number\", \"timer\", \"slider\", \"toggle\", \"radio\", \"dropdown\"].includes(prompt.ui.type)) return {\n//             success: false,\n//             reason: `Prompts' ui must include a type equal to \"header\", \"text\", \"number\", \"timer\", \"slider\", \"toggle\", \"radio\", or \"dropdown\". Found type with value ${prompt.ui.type} in ui of prompt at index ${index}.`\n//         }\n        \n//         if(prompt.ui.type != \"header\"){\n//             if (!promptKeys.includes(\"dataType\")) return {\n//                 success: false,\n//                 reason: `Non-header prompts must include a dataType. No dataType found in prompt at index ${index}.`\n//             }\n\n//             if (![\"boolean\", \"string\", \"4bit\", \"6bit\", \"8bit\", \"16bit\"].includes(prompt.dataType)) return {\n//                 success: false,\n//                 reason: `Non-header prompts must include a dataType equal to \"boolean\", \"string\", \"4bit\", \"6bit\", \"8bit\", or \"16bit\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\n//             }\n\n//             if (prompt.ui.type == \"toggle\" && prompt.dataType != \"boolean\") return {\n//                 success: false,\n//                 reason: `Toggle prompts must have a dataType of \"boolean\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\n//             }\n\n//             if (prompt.ui.type == \"text\" && prompt.dataType != \"string\") return {\n//                 success: false,\n//                 reason: `Text prompts must have a dataType of \"string\". Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\n//             }\n\n//             if ((prompt.ui.type != \"toggle\" && prompt.ui.type != \"text\") && ![\"4bit\", \"6bit\", \"8bit\", \"16bit\"].includes(prompt.dataType)) return {\n//                 success: false,\n//                 reason: `Number or option based prompts must have a numeric dataType (\"4bit\", \"6bit\", \"8bit\", or \"16bit\"). Found dataType with value ${prompt.dataType} in prompt at index ${index}.`\n//             }\n\n//             if(prompt.ui.type == \"radio\" || prompt.ui.type == \"dropdown\"){\n//                 if (!uiKeys.includes(\"options\")) return {\n//                     success: false,\n//                     reason: `Option based prompts' ui must include options. No options found in prompt at index ${index}.`\n//                 }\n\n//                 if (!Array.isArray(prompt.ui.options)) return {\n//                     success: false,\n//                     reason: `Option based prompt ui options must be of type array. Found options of type ${prompt.ui.options} in ui of prompt at index ${index}.`\n//                 }\n\n//                 if (!prompt.ui.options.every(option => typeof option == \"string\")) return {\n//                     success: false,\n//                     reason: `Option based prompt ui options must be of type string. Found option with a non-string type in ui of prompt at index ${index}.`\n//                 }\n\n//                 if (prompt.ui.options.length == 0) return {\n//                     success: false,\n//                     reason: `Option based prompt ui options array must not be empty. Found empty options in ui of prompt at index ${index}.`\n//                 }\n//             }\n//         }\n//     })\n\n//     return {\n//         success: true\n//     }\n// }\n\nconst validateSchema = (schema) => {\n    return {\n        success: true\n    }\n}\n\nexport default validateSchema","import AsyncStorage from \"@react-native-async-storage/async-storage\"\n\nimport validateSchema from \"./validateSchema\"\n\nconst getSchema = async (mode) => {\n    const allKeys = await AsyncStorage.getAllKeys()\n\n    if(allKeys.includes(\"lancer-scout-schema-\" + mode)){\n        const schema = await AsyncStorage.getItem(\"lancer-scout-schema-\" + mode)\n\n        const json = JSON.parse(schema)\n\n        return json\n    } else {\n        await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, JSON.stringify([]))\n\n        return []\n    }\n}\n\nconst setSchema = async (schema, mode) => {\n    const status = validateSchema(JSON.parse(schema))\n\n    if (status.success) await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, schema)\n\n    return status\n}\n\nconst getEntries = async (mode) => {\n    const allKeys = await AsyncStorage.getAllKeys()\n\n    if(allKeys.includes(\"lancer-scout-entries-\" + mode)){\n        const entries = await AsyncStorage.getItem(\"lancer-scout-entries-\" + mode)\n\n        const json = JSON.parse(entries)\n\n        return json\n    } else {\n        await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify([]))\n\n        return []\n    }\n}\n\nconst addEntry = async (entry, mode) => {\n    const entries = await getEntries(mode)\n\n    const updated = [ ...entries, entry ]\n\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\n}\n\nconst removeEntry = async (id, mode) => {\n    const entries = await getEntries(mode)\n\n    const updated = entries.filter(e => e.id != id)\n\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\n}\n\nexport {\n    getSchema,\n    setSchema,\n    getEntries,\n    addEntry,\n    removeEntry\n}","import React, { useState, useEffect } from \"react\"\n\nimport { SafeAreaView, View, ScrollView, Text, StyleSheet } from \"react-native\"\n\nimport MatchListItem from \"../components/ScoutListItem\"\nimport Button from \"../components/Button\"\n\nimport { getSchema, getEntries } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\n\nconst DefaultStack = ({ route, navigation }) => {\n    const { mode } = route.params\n\n    const [form, setForm] = useState([])\n    const [entries, setEntries] = useState([])\n\n    useEffect(() => {\n        getSchema(mode).then(setForm)\n        getEntries(mode).then(setEntries)\n\n        navigation.addListener(\"state\", () => {\n            getSchema(mode).then(setForm)\n            getEntries(mode).then(setEntries)\n        })\n    }, [])\n\n    const matchListItemRenders = []\n\n    entries.reverse().forEach(entry => {\n        matchListItemRenders.push(\n            <MatchListItem key={entry.id} matchTimestamp={entry.id} data={entry.buffer} navigation={navigation} mode={mode} />\n        )\n    })\n\n    return (\n        <SafeAreaView style={styles.wrapper}>\n            <View style={styles.headerContainer}>\n                <Text style={styles.headerText}>{ mode } Scouting Hub</Text>\n            </View>\n            <ScrollView style={{ backgroundColor: colors.grey }}>\n                <Button handlePress={() => navigation.push(\"DataEntry\", { form, mode })}>Start { mode } Scouting</Button>\n                <Button handlePress={() => navigation.push(\"UploadSchema\", { mode })}>Upload { mode } Schema</Button>\n                <View style={{ height: 6 }} />\n                {\n                    matchListItemRenders.length > 0 ?\n                        matchListItemRenders :\n                        <React.Fragment>\n                            <View style={{ marginTop: 4, height: 1, backgroundColor: colors.crimson }} />\n                            <Text style={styles.emptyList}>No Scouting Entries Yet</Text>\n                        </React.Fragment>\n                }\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        flex: 1,\n        backgroundColor: colors.white\n    },\n    headerContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 70,\n        backgroundColor: colors.white,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.crimson\n    },\n    headerText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 24,\n        color: colors.black\n    },\n    emptyList: {\n        marginTop: 20,\n        fontFamily: \"Open Sans\",\n        fontSize: 24,\n        color: colors.crimson,\n        textAlign: \"center\"\n    }\n})\n\nexport default DefaultStack","import React, { useState, useEffect, useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, TextInput, StyleSheet } from \"react-native\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faMinus, faPlus, faRepeat, faPlay, faPause, faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\n\nimport format from \"format-duration\"\n\nimport { screen, colors } from \"../constants\"\n\nconst FormHeader = ({ title, setValue }) => {\n    return (\n        <View style={styles.headerContainer} onLayout={(e) => {\n            // store the scroll offset here for convenience, it won't be included in upload data\n            setValue(e.nativeEvent.layout.y)\n        }}>\n            <Text style={styles.headerText} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n        </View>\n    )\n}\n\nconst FormTextInput = ({ title, maxLength, placeholder, value, setValue }) => {\n    const inputRef = useRef()\n\n    const focus = () => inputRef.current.focus()\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <TouchableWithoutFeedback onPress={focus}>\n                <View style={styles.inputTextContainer}>\n                    <TextInput ref={inputRef} placeholder={placeholder} maxLength={maxLength} value={value} onChangeText={setValue} style={styles.inputText} placeholderTextColor={colors.dark} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline />\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}\n\nconst FormNumberInput = ({ title, value, setValue, dataType }) => {\n    const inputRef = useRef()\n\n    const focus = () => inputRef.current.focus()\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const setInputValue = (v) => {\n        const num = parseFloat(v)\n        if(isNaN(num)){\n            setValue(0)\n        } else {\n            setValue(clampInputValue(num))\n        }\n    }\n\n    const minus = () => {\n        if(value > 0){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n            setValue(clampInputValue(value - 1))\n        }\n    }\n\n    const plus = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setValue(clampInputValue(value + 1))\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.multiControlInputContainer}>\n                <TouchableWithoutFeedback onPress={focus}>\n                    <View style={styles.inputTextContainer}>\n                        <TextInput ref={inputRef} value={value.toString()} onChangeText={setInputValue} style={styles.inputText} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline keyboardType={\"numeric\"} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={minus}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faMinus} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={plus}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faPlus} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormTimerInput = ({ title, value, setValue, dataType }) => {\n    const [running, setRunning] = useState(false)\n\n    const [startTimestep, setStartTimestep] = useState(0)\n    const [endTimestep, setEndTimestep] = useState(0)\n\n    const timeElapsed = running ? endTimestep - startTimestep : value\n\n    useEffect(() => {\n        if(running){\n            const interval = setInterval(() => setEndTimestep(Date.now()), 500)\n\n            return () => clearInterval(interval)\n        }\n    }, [running])\n\n    const restart = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setValue(0)\n        setStartTimestep(Date.now())\n        setEndTimestep(Date.now())\n    }\n\n    const start = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setRunning(true)\n        setStartTimestep(Date.now() - timeElapsed)\n        setEndTimestep(Date.now())\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const stop = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setRunning(false)\n        setValue(clampInputValue(Math.round(1000 * timeElapsed)))\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.multiControlInputContainer}>\n                <View style={styles.inputTextContainer}>\n                    <Text style={styles.inputText}>\n                        {\n                            format(timeElapsed, { leading: true })\n                        }\n                    </Text>\n                </View>\n                <TouchableWithoutFeedback onPress={restart}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faRepeat} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={running ? stop : start}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={running ? faPause : faPlay} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormSliderInput = ({ title, value, setValue, dataType }) => {\n    const min = 0\n    const max = 10\n    const step = 1\n\n    const [touchX, setTouchX] = useState(0)\n\n    const handleTouchStart = (e) => {\n        setTouchX(e.nativeEvent.touches[0].pageX)\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const handleTouchMove = (e) => {\n        const screenWidth = screen.width - 60 - 10\n        const deltaX = e.nativeEvent.touches[0].pageX - touchX\n\n        const newValue = Math.max(Math.min(value + (deltaX / screenWidth) * (max - min), max), min)\n\n        if(Math.round(value / step) != Math.round(newValue / step)){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n\n        setValue(clampInputValue(newValue))\n        setTouchX(e.nativeEvent.touches[0].pageX)\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={{ width: \"100%\" }}>\n                <View style={[{ width: 40, alignItems: \"center\" }, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) - 5 }] }]}>\n                    <Text style={styles.sliderLabel}>\n                        {\n                            step * Math.round(value / step)\n                        }\n                    </Text>\n                </View>\n            </View>\n            <TouchableWithoutFeedback>\n                <View style={styles.sliderInputContainer}>\n                    <View style={styles.sliderTrackBar} />\n                    <TouchableWithoutFeedback>\n                        <View style={[styles.sliderInputThumb, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) }] }]} onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} />\n                    </TouchableWithoutFeedback>\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}\n\nconst FormToggleInput = ({ title, value, setValue }) => {\n    const setToFalse = () => {\n        if(value){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n        setValue(false)\n    }\n\n    const setToTrue = () => {\n        if(!value){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n        setValue(true)\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.toggleButtonsContainer}>\n                <TouchableWithoutFeedback onPress={setToFalse}>\n                    <View style={[styles.toggleButtonContainer, { borderColor: !value ? colors.crimson : colors.white, backgroundColor: !value ? colors.pink : colors.white }]}>\n                        <Text style={styles.toggleButtonText}>False</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={setToTrue}>\n                    <View style={[styles.toggleButtonContainer, { borderColor: value ? colors.crimson : colors.white, backgroundColor: value ? colors.pink : colors.white }]}>\n                        <Text style={styles.toggleButtonText}>True</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormRadioInput = ({ title, options, value, setValue, dataType }) => {\n    const optionRenders = []\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    options.forEach((option, index) => {\n        const setSelectedOption = () => {\n            if(value != index){\n                // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n            }\n            setValue(clampInputValue(index))\n        }\n\n        optionRenders.push(\n            <TouchableWithoutFeedback key={index} onPress={setSelectedOption}>\n                <View style={[styles.radioOptionButtonContainer, { borderColor: index == value ? colors.crimson : colors.white, backgroundColor: index == value ? colors.pink : colors.white }]}>\n                    <Text style={styles.radioOptionButtonText}>\n                        {\n                            option\n                        }\n                    </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        )\n    })\n\n    return (\n        <View style={[styles.inputContainer, { paddingBottom: 0 }]}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            {\n                optionRenders\n            }\n        </View>\n    )\n}\n\nconst FormDropdownInput = ({ title, options, value, setValue, dataType }) => {\n    const [menuOpen, setMenuOpen] = useState(false)\n\n    const toggleMenu = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setMenuOpen(!menuOpen)\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const optionRenders = []\n    options.forEach((option, index) => {\n        const selectOption = () => {\n            setValue(clampInputValue(index))\n            toggleMenu()\n        }\n\n        optionRenders.push(\n            <TouchableWithoutFeedback key={index} onPress={selectOption}>\n                <View style={[styles.dropdownOptionContainer, { backgroundColor: index == value ? colors.pink : colors.white, borderColor: index == value ? colors.crimson : colors.white }]}>\n                    <Text style={styles.dropdownOptionText}>\n                        {\n                            option\n                        }\n                    </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        )\n    })\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={[styles.multiControlInputContainer, { marginBottom: menuOpen ? 5 : 0 }]}>\n                <View style={{ ...styles.inputTextContainer, height: 48, justifyContent: \"center\" }}>\n                    <Text style={styles.inputText}>\n                        {\n                            options[value]\n                        }\n                    </Text>\n                </View>\n                <TouchableWithoutFeedback onPress={toggleMenu}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={menuOpen ? faChevronUp : faChevronDown} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n            {\n                menuOpen && optionRenders\n            }\n        </View>\n    )\n}\n\nconst Input = (props) => {\n    let Component = () => null\n\n    switch(props.ui.type){\n        case \"header\":\n            Component = FormHeader\n            break\n        case \"text\":\n            Component = FormTextInput\n            break\n        case \"number\":\n            Component = FormNumberInput\n            break\n        case \"timer\":\n            Component = FormTimerInput\n            break\n        case \"slider\":\n            Component = FormSliderInput\n            break\n        case \"toggle\":\n            Component = FormToggleInput\n            break\n        case \"radio\":\n            Component = FormRadioInput\n            break\n        case \"dropdown\":\n            Component = FormDropdownInput\n            break\n    }\n\n    return Component({ ...props, ...props.ui, title: props.title })\n}\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n        width: \"100%\",\n        height: 60,\n        marginTop: 10,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    headerText: {\n        paddingHorizontal: 20,\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 24,\n        color: colors.crimson,\n        textDecorationLine: \"underline\",\n        textDecorationColor: colors.crimson\n    },\n    inputContainer: {\n        margin: 10,\n        marginBottom: 0,\n        padding: 10,\n        borderRadius: 10,\n        backgroundColor: colors.white\n    },\n    inputTitle: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"400\",\n        color: colors.black,\n        fontSize: 20,\n        marginBottom: 10\n    },\n    inputTextContainer: {\n        flex: 1,\n        padding: 10,\n        borderWidth: 1,\n        borderColor: colors.crimson,\n        borderRadius: 10\n    },\n    inputText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontStyle: \"italic\",\n        fontSize: 16,\n        color: colors.black\n    },\n    multiControlInputContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    controlButton: {\n        width: 48,\n        height: 48,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginLeft: 10,\n        borderWidth: 1,\n        borderColor: colors.crimson,\n        borderRadius: 10\n    },\n    sliderLabel: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 16,\n        color: colors.black,\n        marginTop: 5\n    },\n    sliderInputContainer: {\n        width: \"100%\",\n        height: 30,\n        marginTop: 5,\n        justifyContent: \"center\"\n    },\n    sliderInputThumb: {\n        position: \"absolute\",\n        width: 30,\n        height: 30,\n        borderWidth: 2.5,\n        borderColor: colors.crimson,\n        borderRadius: 10,\n        backgroundColor: colors.pink\n    },\n    sliderTrackBar: {\n        width: \"100%\",\n        height: 4,\n        borderRadius: 2,\n        backgroundColor: colors.dark\n    },\n    toggleButtonsContainer: {\n        width: \"100%\",\n        height: 50,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    toggleButtonContainer: {\n        width: 0.5 * (screen.width - 40) - 5,\n        height: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        borderWidth: 2.5\n    },\n    toggleButtonText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 20,\n        color: colors.black\n    },\n    radioOptionButtonContainer: {\n        width: \"100%\",\n        height: 50,\n        justifyContent: \"center\",\n        marginBottom: 10,\n        borderRadius: 10,\n        borderWidth: 2.5\n    },\n    radioOptionButtonText: {\n        paddingHorizontal: 20,\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 18,\n        color: colors.black\n    },\n    dropdownOptionContainer: {\n        marginTop: 5,\n        padding: 10,\n        borderWidth: 2.5,\n        borderRadius: 10\n    },\n    dropdownOptionText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 16,\n        color: colors.black\n    }\n})\n\nexport default Input","import stringHash from \"string-hash\"\n\n// generate a bit array of the given size with the given number stored in binary (bit order right to left) \nconst generateBitArrayFromNumber = (number, bitCount) => {\n    let mutatedNumber = number // subtract as bits are calculated\n\n    const bitArray = new Array(bitCount).fill(0)\n\n    for(let i = 0;i<bitCount;i++){\n        const bitOffset = (bitCount - 1) - i // bits are read right to left\n\n        const bitAtOffsetShouldBeTrue = (mutatedNumber / 2) % 1 != 0\n\n        if(bitAtOffsetShouldBeTrue){\n            bitArray[bitOffset] = 1\n\n            mutatedNumber--\n        }\n\n        mutatedNumber /= 2\n    }\n\n    return bitArray\n}\n\n// generate a number from the base2 data in the given bit array (bit order right to left)\nconst generateNumberFromBitArray = (bitArray) => {\n    let number = 0\n\n    for(let i = 0;i<bitArray.length;i++){\n        const power = Math.pow(2, i)\n\n        const bitOffset = (bitArray.length - 1) - i // bits are read from right to left\n\n        number += power * bitArray[bitOffset]\n    }\n\n    return number\n}\n\n// generate a bit array representing the given character in custom base6\nconst generateBitArrayFromCharacter = (char) => {\n    const alphabetChars = \"abcdefghijklmnopqrstuvwxyz\"\n    const alphabetOffset = 0\n    \n    const numericChars = \"0123456789\"\n    const numericOffset = alphabetOffset + alphabetChars.length\n\n    const symbolChars = \",.!?()\\'\\\" \"\n    const symbolOffset = numericOffset + numericChars.length\n\n    let numberValue = Math.pow(2, 6) - 1 // unknown character\n\n    if(alphabetChars.includes(char)){\n        numberValue = alphabetOffset + alphabetChars.indexOf(char)\n    } else if(numericChars.includes(char)){\n        numberValue = numericOffset + numericChars.indexOf(char)\n    } else if(symbolChars.includes(char)){\n        numberValue = symbolOffset + symbolChars.indexOf(char)\n    }\n\n    return generateBitArrayFromNumber(numberValue, 6)\n}\n\n// generate a character from the custom base6 data in the given bit array\nconst generateCharacterFromBitArray = (bitArray) => {\n    const chars = \"abcdefghijklmnopqrstuvwxyz0123456789,.!?()\\'\\\" \"\n\n    const charCode = generateNumberFromBitArray(bitArray)\n\n    if(charCode < chars.length){\n        return chars[charCode]\n    } else {\n        // unknown character\n        // technically we should validate that charCode is 2**6 - 1 but it doesn't really matter\n        return '\\u25A1'\n    }\n}\n\n// format string for 6bit storage\nconst encodeString = (string) => {\n    const lowercase = string.toLowerCase()\n    const spacesMerged = lowercase.replace(/\\s\\s+/g, \" \")\n\n    let punctuationSpacesRemoved = spacesMerged\n\n    const punctuationMarks = [\",\", \".\", \"!\", \"?\"]\n\n    punctuationMarks.forEach(punctuationMark => {\n        punctuationSpacesRemoved = punctuationSpacesRemoved.split(punctuationMark).map(s => s.trim()).join(punctuationMark)\n    })\n    \n    return punctuationSpacesRemoved\n}\n\n// format string after 6bit storage\nconst decodeString = (string) => {\n    const withSpacesAfterCommas = string.split(\",\").map((s, index) => index == 0 ? s : \" \" + s).join(\",\")\n\n    let withSentenceFormatting = withSpacesAfterCommas\n\n    const sentenceDelimiters = [\".\", \"!\", \"?\"]\n\n    sentenceDelimiters.forEach(sentenceDelimiter => {\n        withSentenceFormatting = withSentenceFormatting.split(sentenceDelimiter).map((s, index) => {\n            if (s.length == 0) return \"\"\n\n            s = s.slice(0, 1).toUpperCase() + s.slice(1)\n\n            return index == 0 ? s : \" \" + s\n        }).join(sentenceDelimiter)\n    })\n\n    return withSentenceFormatting\n}\n\n// generate a bit array representing the given string stored in a base8 size header and custom base6 chars\nconst generateBitArrayFromString = (string) => {\n    const encodedString = encodeString(string)\n\n    const sizeBitArray = generateBitArrayFromNumber(encodedString.length, 8)\n\n    const characterBitArrays = []\n\n    for(let i = 0;i<encodedString.length;i++){\n        const char = encodedString[i]\n\n        characterBitArrays.push(generateBitArrayFromCharacter(char))\n    }\n\n    const stringBitArray = [sizeBitArray, ...characterBitArrays].flat()\n\n    return stringBitArray\n}\n\n// generate a string from the custom base6 data in the given bit array\n// bit array should not include the base8 size header\nconst generateStringFromBitArray = (bitArray) => {\n    const chars = []\n\n    for(let i = 0;i<bitArray.length / 6;i++){\n        const charOffset = 6 * i\n\n        const charBitArray = []\n\n        for(let j = 0;j<6;j++){\n            const bitOffset = j\n\n            charBitArray.push(bitArray[charOffset + bitOffset])\n        }\n\n        chars.push(generateCharacterFromBitArray(charBitArray))\n    }\n\n    return decodeString(chars.join(\"\"))\n}\n\n// generate a bit array from the hash of the given form\nconst generateBitArrayFromFormHash = (form) => {\n    const hashInput = JSON.stringify(form)\n\n    const hashOutput = stringHash(hashInput)\n\n    return generateBitArrayFromNumber(hashOutput, 32)\n}\n\n// generate a bit array from the given value and data type identifier\nconst generateBitArrayFromValueAndType = (value, type) => {\n    if(type == \"boolean\"){\n        return [ value ? 1 : 0 ]\n    } else if(type == \"string\"){\n        return generateBitArrayFromString(value)\n    } else if(type == \"1bit\"){\n        return generateBitArrayFromNumber(value, 1)\n    } else if(type == \"2bit\"){\n        return generateBitArrayFromNumber(value, 2)\n    } else if(type == \"4bit\"){\n        return generateBitArrayFromNumber(value, 4)\n    } else if(type == \"6bit\"){\n        return generateBitArrayFromNumber(value, 6)\n    } else if(type == \"8bit\"){\n        return generateBitArrayFromNumber(value, 8)\n    } else if(type == \"8bit\"){\n        return generateBitArrayFromNumber(value, 8)\n    }\n}\n\n// generate a value from the given bit array and data type identifier\nconst generateValueFromBitArrayAndType = (bitArray, type) => {\n    if(type == \"boolean\"){\n        return bitArray[0] == 1\n    } else if(type == \"string\"){\n        return generateStringFromBitArray(bitArray)\n    } else if(type == \"1bit\" || type == \"2bit\" || type == \"4bit\" || type == \"6bit\" || type == \"8bit\" || type == \"16bit\"){\n        return generateNumberFromBitArray(bitArray)\n    }\n}\n\n// generate a bit array from the given data\nconst generateBitArrayFromData = (data) => {\n    const hashBitArray = generateBitArrayFromFormHash(data.form)\n\n    const idBitArray = generateBitArrayFromNumber(data.id, 16)\n\n    const entryBitArrays = [] // array of bit arrays for each entry in the data\n\n    if (data.entries.length != data.form.length) throw new Error(\"Expected data and form to be the same size\")\n\n    for(let i = 0;i<data.entries.length;i++){\n        const value = data.entries[i]\n        const type = data.form[i].dataType\n\n        entryBitArrays.push(generateBitArrayFromValueAndType(value, type))\n    }\n\n    const bitArray = [hashBitArray, idBitArray, ...entryBitArrays].flat()\n\n    return bitArray\n}\n\n// generate data from the given bit array and form\nconst generateDataFromBitArray = (bitArray, form) => {\n    const hash = generateNumberFromBitArray(bitArray.splice(0, 32))\n    const expectedHash = generateNumberFromBitArray(generateBitArrayFromFormHash(form))\n\n    if (hash != expectedHash) return null\n\n    const id = generateNumberFromBitArray(bitArray.splice(0, 16))\n\n    const entries = []\n\n    for(let i = 0;i<form.length;i++){\n        const type = form[i].dataType\n\n        let entrySize = 0\n\n        if(type == \"boolean\"){\n            entrySize = 1\n        } else if(type == \"string\"){\n            const stringSizeHeader = bitArray.splice(0, 8)\n            \n            entrySize = 6 * generateNumberFromBitArray(stringSizeHeader)\n        } else if(type == \"1bit\"){\n            entrySize = 1\n        } else if(type == \"2bit\"){\n            entrySize = 2\n        } else if(type == \"4bit\"){\n            entrySize = 4\n        } else if(type == \"6bit\"){\n            entrySize = 6\n        } else if(type == \"8bit\"){\n            entrySize = 8\n        } else if(type == \"16bit\"){\n            entrySize = 16\n        }\n\n        const entryBitArray = bitArray.splice(0, entrySize)\n        const entryValue = generateValueFromBitArrayAndType(entryBitArray, type)\n\n        entries.push(entryValue)\n    }\n\n    return {\n        id,\n        entries\n    }\n}\n\n// convert the given bit array to an array of bytes (byte order left to right, bit order right to left)\nconst bitArrayToBuffer = (bitArray) => {\n    const bytes = []\n\n    // pad to make sure last byte is full\n    const paddingNeeded = 8 - (bitArray.length % 8)\n\n    for(let i = 0;i<paddingNeeded;i++){\n        bitArray.push(0)\n    }\n\n    for(let i = 0;i<bitArray.length / 8;i++){\n        const byteOffset = 8 * i\n\n        const byteBitArray = []\n\n        for(let j = 0;j<8;j++){\n            const bitOffset = j\n\n            byteBitArray.push(bitArray[byteOffset + bitOffset])\n        }\n        \n        bytes.push(generateNumberFromBitArray(byteBitArray))\n    }\n\n    return String.fromCharCode(...bytes)\n}\n\n// convert the given buffer of bytes to an array of bits (byte order left to right, but order right to left)\nconst bufferToBitArray = (buffer) => {\n    const byteArray = []\n\n    for(let i = 0;i<buffer.length;i++){\n        byteArray.push(generateBitArrayFromNumber(buffer[i], 8))\n    }\n    \n    const bitArray = byteArray.flat()\n\n    return bitArray\n}\n\n// generate a buffer from the given data\nconst generateBufferFromData = (data) => {\n    const buffer = bitArrayToBuffer(generateBitArrayFromData(data))\n\n    return buffer\n}\n\n// generate data from the given buffer and form\nconst generateDataFromBuffer = (buffer, form) => {\n    const bitArray = bufferToBitArray(buffer)\n\n    const data = generateDataFromBitArray(bitArray, form)\n\n    return data\n}\n\nexport {\n    generateBufferFromData,\n    generateDataFromBuffer\n}","import React, { useRef, useState, useEffect, useCallback } from \"react\"\n\nimport { TouchableWithoutFeedback, ScrollView, View, Text, StyleSheet } from \"react-native\"\n\nimport Input from \"../components/Input\"\n\nimport { generateBufferFromData } from \"../scripts/dataBuffer\"\nimport { addEntry } from \"../scripts/storage\"\n\nimport { screen, colors } from \"../constants\"\n\nconst DataEntryStack = ({ route, navigation }) => {\n    const ref = useRef()\n\n    const { form, mode } = route.params\n    const [inputState, setInputState] = useState([]) // stores relative render y of headers, stored here for convenience\n\n    const rawKeyboardHeight = 80 // hardcoded since dynamic one causes internal memory leak\n    const keyboardHeight = Math.max(0, rawKeyboardHeight - (70 + screen.bottom))\n\n    useEffect(() => {\n        const defaultInputs = []\n\n        form.forEach(input => {\n            let defaultInput = null\n            \n            switch(input.ui.type){\n                case \"text\":\n                    defaultInput = \"\"\n                    break\n                case \"number\":\n                    defaultInput = 0\n                    break\n                case \"timer\":\n                    defaultInput = 0\n                    break\n                case \"slider\":\n                    defaultInput = 0\n                    break\n                case \"toggle\":\n                    defaultInput = false\n                    break\n                case \"radio\":\n                    defaultInput = 0\n                    break\n                case \"dropdown\":\n                    defaultInput = 0\n                    break\n            }\n\n            defaultInputs.push(defaultInput)\n        })\n\n        setInputState(defaultInputs)\n    }, [])\n\n    const setInput = (index, value) => {\n        setInputState((iS) => {\n            const temp = [...iS]\n            temp[index] = value\n            return temp\n        })\n    }\n\n    const [saved, setSaved] = useState(false)\n    const saveInputs = () => {\n        if (saved) return\n        \n        setSaved(true)\n\n        const id = Date.now()\n\n        const inputs = []\n        form.forEach((question, index) => {\n            if (question.ui.type != \"header\") inputs.push(typeof inputState[index] == \"number\" ? Math.round(inputState[index]) : inputState[index])\n        })\n\n        const buffer = generateBufferFromData({\n            form: form.filter(question => question.ui.type != \"header\"),\n            id,\n            entries: inputs\n        })\n\n        addEntry({\n            id,\n            buffer\n        }, mode).then(navigation.goBack)\n    }\n\n    const linkRenders = []\n    form.forEach((item, index) => {\n        if(item.ui.type == \"header\"){\n            linkRenders.push(\n                <TouchableWithoutFeedback key={index} onPress={() => {\n                    // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n                    ref.current.scrollTo({\n                        x: 0,\n                        y: inputState[index] - 10,\n                        animated: true\n                    })\n                }}>\n                    <View style={styles.linkContainer}>\n                        <Text style={styles.linkText}>\n                            {\n                                item.title\n                            }\n                        </Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            )\n        }\n    })\n\n    const inputRenders = []\n    inputState.forEach((item, index) => {\n        inputRenders.push(\n            <Input key={index} value={item} setValue={value => setInput(index, value)} {...form[index]} />\n        )\n    })\n\n    return (\n        <View style={{ flex: 1 }}>\n            {\n                linkRenders.length > 0 ? (\n                    <View><ScrollView style={styles.linksContainer} contentContainerStyle={{ paddingRight: 10 }} horizontal showsHorizontalScrollIndicator={false} children={linkRenders} /></View>\n                ) : <View style={{ height: 1, backgroundColor: colors.crimson }} />\n            }\n            <ScrollView ref={ref} style={styles.inputsContainer} scrollEnabled showsVerticalScrollIndicator={false}>\n                {\n                    inputRenders\n                }\n                <TouchableWithoutFeedback onPress={saveInputs}>\n                    <View style={[styles.buttonContainer, { marginBottom: 20 + rawKeyboardHeight }]}>\n                        <Text style={styles.buttonText}>Save</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            </ScrollView>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    inputsContainer: {\n        flexGrow: 1,\n        backgroundColor: colors.grey\n    },\n    linksContainer: {\n        width: \"100%\",\n        height: 80,\n        paddingVertical: 10,\n        backgroundColor: colors.white,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.crimson\n    },\n    linkContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        backgroundColor: colors.pink,\n        borderRadius: 10,\n        borderWidth: 2,\n        borderColor: colors.crimson\n    },\n    linkText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontSize: 18,\n        color: colors.black\n    },\n    buttonContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 120,\n        margin: 20,\n        borderRadius: 20,\n        borderWidth: 2,\n        borderColor: colors.crimson,\n        backgroundColor: colors.white\n    },\n    buttonText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 20,\n        color: colors.crimson\n    }\n})\n\nexport default DataEntryStack","import React, { useState } from \"react\"\n\nimport { View, TextInput, StyleSheet, Alert, TouchableWithoutFeedback, Keyboard } from \"react-native\"\n\nimport Button from \"../components/Button\"\n\nimport { setSchema } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\n\nconst UploadSchemaStack = ({ route, navigation }) => {\n    const { mode } = route.params\n\n    const [inputSchema, setInputSchema] = useState(\"[]\")\n\n    const [uploaded, setUploaded] = useState(false)\n    const uploadSchema = async () => {\n        if (uploaded) return\n\n        setUploaded(true)\n\n        const status = await setSchema(inputSchema, mode)\n\n        if(status.success){\n            navigation.goBack()\n        } else {\n            alert(\"Failed To Upload Schema\\n\\n\" + status.reason)\n            // Alert.alert(\"Failed To Upload Schema\", status.reason)\n\n            setUploaded(false)\n        }\n    }\n\n    return (\n        // <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <View style={styles.wrapper}>\n                <TextInput style={styles.input} value={inputSchema} onChangeText={setInputSchema} multiline />\n                <Button handlePress={uploadSchema}>Upload</Button>\n            </View>\n        // </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: \"100%\",\n        flex: 1,\n        backgroundColor: colors.white\n    },\n    input: {\n        margin: 10,\n        padding: 10,\n        maxHeight: 200,\n        borderRadius: 10,\n        backgroundColor: colors.grey\n    }\n})\n\nexport default UploadSchemaStack","import QRCode from \"react-native-qrcode-svg\"\n\nimport { colors } from \"../constants\"\n\nconst QR = ({ data }) => <QRCode value={data} ecl={\"M\"} size={300} color={colors.black} backgroundColor={colors.white} />\n\nexport default QR","import React, { useState } from \"react\"\n\nimport { View, Text, StyleSheet, Alert } from \"react-native\"\n\nimport QR from \"../components/QR\"\nimport Button from \"../components/Button\"\n\nimport { removeEntry } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\n\nconst OpenQrStack = ({ route, navigation }) => {\n    const { id, data, mode } = route.params\n\n    const [deleted, setDeleted] = useState(false)\n    const handleDelete = () => {\n        if (deleted) return\n\n        setDeleted(true)\n\n        confirm(\"Are You Sure?\\n\\nIf you delete this qr code all of the scouting information for this entry will be lost.\") ? removeEntry(id, mode).then(navigation.goBack) : setDeleted(false)\n\n        // Alert.alert(\"Are You Sure?\", \"If you delete this qr code all of the scouting information for this entry will be lost.\", [\n        //     {\n        //         text: \"Cancel\",\n        //         style: \"cancel\",\n        //         onPress: () => setDeleted(false)\n        //     },\n        //     {\n        //         text: \"Yes\",\n        //         onPress: () => removeEntry(id, mode).then(navigation.goBack)\n        //     }\n        // ])\n    }\n\n    return (\n        <View style={styles.wrapper}>\n            <Text style={styles.label}>Scan To Upload</Text>\n            <QR data={data} />\n            <View style={{ width: 300, marginTop: 10 }}>\n                <Button handlePress={handleDelete} marginHorizontal={0}>Delete</Button>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: \"100%\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.white\n    },\n    label: {\n        fontFamily: \"Open Sans\",\n        fontSize: 24,\n        color: colors.black,\n        marginBottom: 20\n    }\n})\n\nexport default OpenQrStack","import React from \"react\"\n\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\n\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport DefaultStack from \"../stacks/Default\"\nimport DataEntry from \"../stacks/DataEntry\"\nimport UploadSchema from \"../stacks/UploadSchema\"\nimport OpenQr from \"../stacks/OpenQr\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { screen, colors } from \"../constants\"\n\nconst MatchTab = () => {\n    const Stack = createStackNavigator()\n    \n    return (\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\n            headerShown: false\n        }}>\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Match\" }} component={DefaultStack} />\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\n                headerShown: true,\n                headerTitle: \"Scouting Form\",\n                headerStyle: {\n                    height: 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                gestureEnabled: false,\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\n                            //     {\n                            //         text: \"Cancel\",\n                            //         style: \"cancel\"\n                            //     },\n                            //     {\n                            //         text: \"Yes\",\n                            //         onPress\n                            //     }\n                            // ])\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\n                headerShown: true,\n                headerTitle: \"Upload Schema\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\n                headerShown: true,\n                headerTitle: \"QR Upload\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n        </Stack.Navigator>\n    )\n}\n\nexport default MatchTab","import React from \"react\"\n\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\n\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport DefaultStack from \"../stacks/Default\"\nimport DataEntry from \"../stacks/DataEntry\"\nimport UploadSchema from \"../stacks/UploadSchema\"\nimport OpenQr from \"../stacks/OpenQr\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { screen, colors } from \"../constants\"\n\nconst MatchTab = () => {\n    const Stack = createStackNavigator()\n    \n    return (\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\n            headerShown: false\n        }}>\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Pit\" }} component={DefaultStack} />\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\n                headerShown: true,\n                headerTitle: \"Scouting Form\",\n                headerStyle: {\n                    height: 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                gestureEnabled: false,\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\n                            //     {\n                            //         text: \"Cancel\",\n                            //         style: \"cancel\"\n                            //     },\n                            //     {\n                            //         text: \"Yes\",\n                            //         onPress\n                            //     }\n                            // ])\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\n                headerShown: true,\n                headerTitle: \"Upload Schema\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\n                headerShown: true,\n                headerTitle: \"QR Upload\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n        </Stack.Navigator>\n    )\n}\n\nexport default MatchTab","import React, { useCallback } from \"react\"\nimport { View } from \"react-native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as SplashScreen from \"expo-splash-screen\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChessKnight, faComments, faGear } from \"@fortawesome/free-solid-svg-icons\"\n\nimport MatchTab from \"./src/tabs/Match\"\nimport PitTab from \"./src/tabs/Pit\"\n\nimport { colors } from \"./src/constants\"\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({ \"Open Sans\": require(\"./assets/fonts/OpenSans.ttf\") })\n    \n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) await SplashScreen.hideAsync()\n    }, [fontsLoaded])\n    \n    if (!fontsLoaded) return null\n\n    const Tab = createBottomTabNavigator()\n\n    const icons = {\n        \"Match\": faChessKnight,\n        \"Pit\": faComments,\n        \"Settings\": faGear\n    }\n    \n    return (\n        <View style={{ flex: 1 }} onLayout={onLayoutRootView}>\n            <NavigationContainer>\n                <Tab.Navigator initialRouteName={\"Match\"} screenOptions={({ route }) => {\n                    return {\n                        headerShown: false,\n                        tabBarInactiveTintColor: colors.dark,\n                        tabBarActiveTintColor: colors.crimson,\n                        tabBarStyle: {\n                            paddingTop: 10,\n                            marginBottom: 10,\n                            borderTopWidth: 1,\n                            borderTopColor: colors.crimson\n                        },\n                        tabBarLabelStyle: {\n                            marginTop: 6\n                        },\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <FontAwesomeIcon icon={icons[route.name]} color={color} size={size} />\n                            )\n                        }\n                    }\n                }}>\n                    <Tab.Screen name={\"Match\"} component={MatchTab} />\n                    <Tab.Screen name={\"Pit\"} component={PitTab} />\n                </Tab.Navigator>\n            </NavigationContainer>\n        </View>\n    )\n}\n\nexport default App","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [193], () => (__webpack_require__(6589)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screen","window","innerWidth","innerHeight","colors","styles","StyleSheet","create","wrapper","position","marginTop","undershadow","width","height","backgroundColor","borderRadius","container","flexDirection","alignItems","justifyContent","paddingHorizontal","date","fontFamily","fontSize","color","_ref","matchTimestamp","data","navigation","mode","pressInOffset","useRef","Animated","Value","current","Date","dateString","toDateString","getHours","getMinutes","_jsx","TouchableWithoutFeedback","onPress","push","id","onPressIn","timing","toValue","duration","useNativeDriver","start","onPressOut","children","_jsxs","View","style","_objectSpread","top","Text","FontAwesomeIcon","icon","faChevronRight","size","marginBottom","borderWidth","borderColor","text","fontWeight","handlePress","_ref$marginHorizontal","marginHorizontal","scale","transform","schema","success","getSchema","_asyncToGenerator","AsyncStorage","getAllKeys","includes","getItem","JSON","parse","setItem","stringify","_x","apply","arguments","setSchema","_ref2","status","validateSchema","_x2","_x3","getEntries","_ref3","entries","_x4","addEntry","_ref4","entry","updated","concat","_toConsumableArray","_x5","_x6","removeEntry","_ref5","filter","e","_x7","_x8","flex","headerContainer","borderBottomWidth","borderBottomColor","headerText","emptyList","textAlign","route","params","_useState","useState","_useState2","_slicedToArray","form","setForm","_useState3","_useState4","setEntries","useEffect","then","addListener","matchListItemRenders","reverse","forEach","MatchListItem","buffer","SafeAreaView","ScrollView","Button","length","React","FormHeader","title","setValue","onLayout","nativeEvent","layout","y","numberOfLines","FormTextInput","maxLength","placeholder","value","inputRef","inputContainer","inputTitle","focus","inputTextContainer","TextInput","ref","onChangeText","inputText","placeholderTextColor","cursorColor","selectionColor","multiline","FormNumberInput","dataType","maxValue","Math","pow","parseInt","split","clampInputValue","v","multiControlInputContainer","toString","num","parseFloat","isNaN","keyboardType","controlButton","faMinus","faPlus","FormTimerInput","running","setRunning","startTimestep","setStartTimestep","_useState5","_useState6","endTimestep","setEndTimestep","timeElapsed","interval","setInterval","now","clearInterval","format","leading","faRepeat","round","faPause","faPlay","FormSliderInput","_useState7","_useState8","touchX","setTouchX","translateX","sliderLabel","sliderInputContainer","sliderTrackBar","sliderInputThumb","onTouchStart","touches","pageX","onTouchMove","screenWidth","deltaX","newValue","max","min","FormToggleInput","_ref6","toggleButtonsContainer","toggleButtonContainer","toggleButtonText","FormRadioInput","_ref7","options","optionRenders","option","index","radioOptionButtonContainer","radioOptionButtonText","paddingBottom","FormDropdownInput","_ref8","_useState9","_useState10","menuOpen","setMenuOpen","toggleMenu","dropdownOptionContainer","dropdownOptionText","faChevronUp","faChevronDown","textDecorationLine","textDecorationColor","margin","padding","fontStyle","marginLeft","props","Component","ui","type","generateBitArrayFromNumber","number","bitCount","mutatedNumber","bitArray","Array","fill","i","generateNumberFromBitArray","generateBitArrayFromCharacter","char","alphabetChars","numericChars","symbolChars","numberValue","indexOf","alphabetOffset","numericOffset","generateBitArrayFromFormHash","hashInput","hashOutput","stringHash","generateBitArrayFromValueAndType","string","encodedString","punctuationSpacesRemoved","toLowerCase","replace","punctuationMark","map","s","trim","join","encodeString","sizeBitArray","characterBitArrays","flat","generateBitArrayFromString","generateBufferFromData","bytes","paddingNeeded","byteOffset","byteBitArray","j","bitOffset","String","fromCharCode","bitArrayToBuffer","hashBitArray","idBitArray","entryBitArrays","Error","generateBitArrayFromData","inputsContainer","flexGrow","linksContainer","paddingVertical","linkContainer","linkText","buttonContainer","buttonText","_route$params","inputState","setInputState","defaultInputs","input","defaultInput","saved","setSaved","linkRenders","item","scrollTo","x","animated","inputRenders","Input","iS","temp","setInput","contentContainerStyle","paddingRight","horizontal","showsHorizontalScrollIndicator","scrollEnabled","showsVerticalScrollIndicator","inputs","question","goBack","maxHeight","inputSchema","setInputSchema","uploaded","setUploaded","uploadSchema","alert","reason","QRCode","ecl","label","deleted","setDeleted","QR","confirm","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","initialParams","component","DefaultStack","DataEntry","headerTitle","headerStyle","shadowOpacity","headerTitleStyle","gestureEnabled","headerLeft","faChevronLeft","UploadSchema","OpenQr","_useFonts","useFonts","require","fontsLoaded","onLayoutRootView","useCallback","SplashScreen","Tab","createBottomTabNavigator","icons","faChessKnight","faComments","faGear","NavigationContainer","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarStyle","paddingTop","borderTopWidth","borderTopColor","tabBarLabelStyle","tabBarIcon","MatchTab","PitTab","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}