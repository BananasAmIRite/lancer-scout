{"version":3,"file":"static/js/main.f34735de.js","mappings":"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","sources":["src/constants.js","src/components/ScoutListItem.js","src/components/Button.js","src/scripts/validateSchema.js","src/scripts/storage.js","src/scripts/dataBuffer.js","src/stacks/Default.js","src/components/Input.js","src/stacks/DataEntry.js","src/stacks/UploadSchema.js","src/components/QR.js","src/stacks/OpenQr.js","src/tabs/Match.js","src/tabs/Pit.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// import { initialWindowMetrics } from \"react-native-safe-area-context\"\n\nconst screen = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    top: 0,\n    bottom: 0\n    // width: initialWindowMetrics.frame.width - initialWindowMetrics.insets.left - initialWindowMetrics.insets.right,\n    // height: initialWindowMetrics.frame.height - initialWindowMetrics.insets.top - initialWindowMetrics.insets.bottom,\n    // top: initialWindowMetrics.insets.top,\n    // bottom: initialWindowMetrics.insets.bottom\n}\n\nconst colors = {\n    white: \"rgb(245, 245, 245)\",\n    grey: \"rgb(220, 220, 220)\",\n    dark: \"rgb(90, 90, 90)\",\n    black: \"rgb(20, 20, 20)\",\n    crimson: \"rgb(184, 1, 0)\",\n    pink: \"rgb(250, 180, 180)\",\n}\n\nexport {\n    screen,\n    colors\n}","import React, { useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { colors } from \"../constants\"\n\n// match id for qr code is same as matchTimestamp so pass it in as one variable\nconst MatchListItem = ({ matchTimestamp, data, navigation, mode }) => {\n    const pressInOffset = useRef(new Animated.Value(-4)).current\n\n    const date = new Date(matchTimestamp)\n    \n    const dateString = date.toDateString() + \" at \" + (date.getHours() % 12) + \":\" + (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) + \" \" + (date.getHours() > 12 ? \"pm\" : \"am\")\n\n    const handlePress = () => navigation.push(\"OpenQr\", { id: matchTimestamp, data, mode })\n\n    const handlePressIn = () => {\n        Animated.timing(pressInOffset, {\n            toValue: 0,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    const handlePressOut = () => {\n        Animated.timing(pressInOffset, {\n            toValue: -4,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\n            <View style={styles.wrapper}>\n                <View style={styles.undershadow} />\n                <Animated.View style={{ ...styles.container, top: pressInOffset }}>\n                    <Text style={styles.date}>\n                        {\n                            dateString\n                        }\n                    </Text>\n                    <FontAwesomeIcon icon={faChevronRight} size={24} color={colors.crimson} />\n                </Animated.View>\n            </View>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"relative\",\n        marginTop: 10\n    },\n    undershadow: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: 60,\n        backgroundColor: colors.pink,\n        borderRadius: 10\n    },\n    container: {\n        height: 60,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        paddingHorizontal: 20,\n        backgroundColor: colors.white,\n        borderRadius: 10\n    },\n    date: {\n        fontFamily: \"Open Sans\",\n        fontSize: 18,\n        color: colors.black\n    }\n})\n\nexport default MatchListItem","import React, { useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, StyleSheet, Animated } from \"react-native\"\n\nimport { colors } from \"../constants\"\n\nconst Button = ({ children, handlePress, marginHorizontal=40 }) => {\n    const scale = useRef(new Animated.Value(1)).current\n\n    const handlePressIn = () => {\n        Animated.timing(scale, {\n            toValue: 0.8,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    const handlePressOut = () => {\n        Animated.timing(scale, {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: false\n        }).start()\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={handlePress} onPressIn={handlePressIn} onPressOut={handlePressOut}>\n            <View style={{ ...styles.wrapper , marginHorizontal }}>\n                <Animated.View style={{ ...styles.container, transform: [{ scale }] }}>\n                    <Text style={styles.text}>\n                        {\n                            children\n                        }\n                    </Text>\n                </Animated.View>\n            </View>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"relative\",\n        marginTop: 10,\n        marginBottom: 0\n    },\n    container: {\n        height: 60,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.pink,\n        borderRadius: 10,\n        borderWidth: 2,\n        borderColor: colors.crimson\n    },\n    text: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontSize: 18,\n        color: colors.black\n    }\n})\n\nexport default Button","const failureStatus = (reason) => ({ success: false, reason: \"Provided schema \" + reason })\n\nconst validateSchema = (schema, mode) => {\n    if (typeof schema == \"string\") {\n        try {\n            schema = JSON.parse(schema)\n        } catch (e) {\n            return failureStatus(\"string is not valid json\")\n        }\n    }\n\n    if (!Array.isArray(schema)) return failureStatus(\"is not an array\")\n\n    const promptTitles = []\n\n    for(let i = 0;i<schema.length;i++){\n        const prompt = schema[i]\n\n        if (typeof prompt != \"object\" || prompt == null || Array.isArray(prompt)) return failureStatus(\"has a non object prompt\")\n\n        if (!prompt.title) return failureStatus(\"has a prompt without a title\")\n\n        if (promptTitles.includes(prompt.title)) return failureStatus(\"has prompts with duplicate titles\")\n        promptTitles.push(prompt.title)\n\n        if (!prompt.ui) return failureStatus(\"has a prompt without a ui\")\n        if (prompt.ui.type != \"header\" && !prompt.dataType) return failureStatus(\"has a prompt without a data type\")\n\n        if (![ \"header\", \"text\", \"number\", \"timer\", \"slider\", \"toggle\", \"radio\", \"dropdown\" ].includes(prompt.ui.type)) return failureStatus(\"has an invalid ui type\")\n\n        switch(prompt.ui.type){\n            case \"header\":\n                break\n            case \"text\":\n                if (!prompt.ui.maxLength || typeof prompt.ui.maxLength != \"number\") return failureStatus(\"has an invalid max length for a text prompt\")\n                if (prompt.dataType != \"string\") return failureStatus(\"has a data type other than 'string' attached to a text prompt\")\n                break\n            case \"number\":\n            case \"timer\":\n                if (![ \"1bit\", \"2bit\", \"4bit\", \"6bit\", \"8bit\", \"16bit\" ].includes(prompt.dataType)) return failureStatus(\"has an invalid data type attached to a number prompt\")\n                break\n            case \"slider\":\n                if (prompt.dataType != \"4bit\") return failureStatus(\"has a data type other than '4bit' attached to slider prompt\")\n                break\n            case \"toggle\":\n                if (prompt.dataType != \"boolean\") return failureStatus(\"has a data type other than 'boolean' attached to a toggle prompt\")\n                break\n            case \"radio\":\n            case \"dropdown\":\n                if (!prompt.ui.options || !Array.isArray(prompt.ui.options) || !prompt.ui.options.every(option => typeof option == \"string\")) return failureStatus(\"has an invalid options array for a selection based prompt\")\n\n                let expectedDataType = \"1bit\"\n\n                if (prompt.ui.options.length > Math.pow(2, 1)) expectedDataType = \"2bit\"\n                if (prompt.ui.options.length > Math.pow(2, 2)) expectedDataType = \"4bit\"\n                if (prompt.ui.options.length > Math.pow(2, 4)) expectedDataType = \"6bit\"\n                if (prompt.ui.options.length > Math.pow(2, 6)) expectedDataType = \"8bit\"\n                if (prompt.ui.options.length > Math.pow(2, 8)) expectedDataType = \"16bit\"\n\n                if (prompt.dataType != expectedDataType) return failureStatus(\"has a suboptimal data type attached to a selection based prompt\")\n                break\n        }\n    }\n\n    if (!promptTitles.includes(\"Team Name\")) return failureStatus(\"does not have the required prompt with title 'Team Name'\")\n\n    const teamNamePrompt = schema.find(prompt => prompt.title == \"Team Name\")\n    if (![ \"text\", \"radio\", \"dropdown\" ].includes(teamNamePrompt.ui.type)) return failureStatus(\"has a non string generating type for the required prompt with title 'Team Name'\")\n\n    if (mode == \"Match\") {\n        if (!promptTitles.includes(\"Match Number\")) return failureStatus(\"does not have the required prompt with title 'Match Number'\")\n\n        const matchNumberPrompt = schema.find(prompt => prompt.title == \"Match Number\")\n        if (matchNumberPrompt.ui.type != \"number\") return failureStatus(\"has a ui type other than 'number' for the required prompt with title 'Match Number'\")\n    }\n\n    return {\n        success: true\n    }\n}\n\nexport default validateSchema","import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport axios from \"axios\"\nimport to from \"await-to-js\"\n\nimport validateSchema from \"./validateSchema\"\n\nconst getSchema = async (mode) => {\n    const allKeys = await AsyncStorage.getAllKeys()\n\n    if(allKeys.includes(\"lancer-scout-schema-\" + mode)){\n        const schema = await AsyncStorage.getItem(\"lancer-scout-schema-\" + mode)\n\n        const json = JSON.parse(schema)\n\n        return json\n    } else {\n        await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, JSON.stringify([]))\n\n        return []\n    }\n}\n\nconst setSchema = async (schemaURL, mode) => {\n    const [err, res] = await to(axios.get(schemaURL))\n\n    if (err) return {\n        success: false,\n        reason: \"Unable to retrieve the provided URL. Please make sure you are connected to wifi and the provided URL exists.\"\n    }\n\n    const schema = res.data\n    const status = validateSchema(schema, mode)\n\n    if (status.success) await AsyncStorage.setItem(\"lancer-scout-schema-\" + mode, typeof schema == \"string\" ? schema : JSON.stringify(schema))\n\n    return status\n}\n\nconst getEntries = async (mode) => {\n    const allKeys = await AsyncStorage.getAllKeys()\n\n    if(allKeys.includes(\"lancer-scout-entries-\" + mode)){\n        const entries = await AsyncStorage.getItem(\"lancer-scout-entries-\" + mode)\n\n        const json = JSON.parse(entries)\n\n        return json\n    } else {\n        await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify([]))\n\n        return []\n    }\n}\n\nconst addEntry = async (entry, mode) => {\n    const entries = await getEntries(mode)\n\n    const updated = [ ...entries, entry ]\n\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\n}\n\nconst removeEntry = async (id, mode) => {\n    const entries = await getEntries(mode)\n\n    const updated = entries.filter(e => e.id != id)\n\n    await AsyncStorage.setItem(\"lancer-scout-entries-\" + mode, JSON.stringify(updated))\n}\n\nexport {\n    getSchema,\n    setSchema,\n    getEntries,\n    addEntry,\n    removeEntry\n}","import stringHash from \"string-hash\"\n\n// generate a bit array of the given size with the given number stored in binary (bit order right to left) \nconst generateBitArrayFromNumber = (number, bitCount) => {\n    let mutatedNumber = number // subtract as bits are calculated\n\n    const bitArray = new Array(bitCount).fill(0)\n\n    for(let i = 0;i<bitCount;i++){\n        const bitOffset = (bitCount - 1) - i // bits are read right to left\n\n        const bitAtOffsetShouldBeTrue = (mutatedNumber / 2) % 1 != 0\n\n        if(bitAtOffsetShouldBeTrue){\n            bitArray[bitOffset] = 1\n\n            mutatedNumber--\n        }\n\n        mutatedNumber /= 2\n    }\n\n    return bitArray\n}\n\n// generate a number from the base2 data in the given bit array (bit order right to left)\nconst generateNumberFromBitArray = (bitArray) => {\n    let number = 0\n\n    for(let i = 0;i<bitArray.length;i++){\n        const power = Math.pow(2, i)\n\n        const bitOffset = (bitArray.length - 1) - i // bits are read from right to left\n\n        number += power * bitArray[bitOffset]\n    }\n\n    return number\n}\n\n// generate a bit array representing the given character in custom base6\nconst generateBitArrayFromCharacter = (char) => {\n    const alphabetChars = \"abcdefghijklmnopqrstuvwxyz\"\n    const alphabetOffset = 0\n    \n    const numericChars = \"0123456789\"\n    const numericOffset = alphabetOffset + alphabetChars.length\n\n    const symbolChars = \",.!?()\\'\\\" \"\n    const symbolOffset = numericOffset + numericChars.length\n\n    let numberValue = Math.pow(2, 6) - 1 // unknown character\n\n    if(alphabetChars.includes(char)){\n        numberValue = alphabetOffset + alphabetChars.indexOf(char)\n    } else if(numericChars.includes(char)){\n        numberValue = numericOffset + numericChars.indexOf(char)\n    } else if(symbolChars.includes(char)){\n        numberValue = symbolOffset + symbolChars.indexOf(char)\n    }\n\n    return generateBitArrayFromNumber(numberValue, 6)\n}\n\n// generate a character from the custom base6 data in the given bit array\nconst generateCharacterFromBitArray = (bitArray) => {\n    const chars = \"abcdefghijklmnopqrstuvwxyz0123456789,.!?()\\'\\\" \"\n\n    const charCode = generateNumberFromBitArray(bitArray)\n\n    if(charCode < chars.length){\n        return chars[charCode]\n    } else {\n        // unknown character\n        // technically we should validate that charCode is 2**6 - 1 but it doesn't really matter\n        return '\\u25A1'\n    }\n}\n\n// format string for 6bit storage\nconst encodeString = (string) => {\n    const lowercase = string.toLowerCase()\n    const spacesMerged = lowercase.replace(/\\s\\s+/g, \" \")\n\n    let punctuationSpacesRemoved = spacesMerged\n\n    const punctuationMarks = [\",\", \".\", \"!\", \"?\"]\n\n    punctuationMarks.forEach(punctuationMark => {\n        punctuationSpacesRemoved = punctuationSpacesRemoved.split(punctuationMark).map(s => s.trim()).join(punctuationMark)\n    })\n    \n    return punctuationSpacesRemoved\n}\n\n// format string after 6bit storage\nconst decodeString = (string) => {\n    const withSpacesAfterCommas = string.split(\",\").map((s, index) => index == 0 ? s : \" \" + s).join(\",\")\n\n    let withSentenceFormatting = withSpacesAfterCommas\n\n    const sentenceDelimiters = [\".\", \"!\", \"?\"]\n\n    sentenceDelimiters.forEach(sentenceDelimiter => {\n        withSentenceFormatting = withSentenceFormatting.split(sentenceDelimiter).map((s, index) => {\n            if (s.length == 0) return \"\"\n\n            s = s.slice(0, 1).toUpperCase() + s.slice(1)\n\n            return index == 0 ? s : \" \" + s\n        }).join(sentenceDelimiter)\n    })\n\n    return withSentenceFormatting\n}\n\n// generate a bit array representing the given string stored in a base8 size header and custom base6 chars\nconst generateBitArrayFromString = (string) => {\n    const encodedString = encodeString(string)\n\n    const sizeBitArray = generateBitArrayFromNumber(encodedString.length, 8)\n\n    const characterBitArrays = []\n\n    for(let i = 0;i<encodedString.length;i++){\n        const char = encodedString[i]\n\n        characterBitArrays.push(generateBitArrayFromCharacter(char))\n    }\n\n    const stringBitArray = [sizeBitArray, ...characterBitArrays].flat()\n\n    return stringBitArray\n}\n\n// generate a string from the custom base6 data in the given bit array\n// bit array should not include the base8 size header\nconst generateStringFromBitArray = (bitArray) => {\n    const chars = []\n\n    for(let i = 0;i<bitArray.length / 6;i++){\n        const charOffset = 6 * i\n\n        const charBitArray = []\n\n        for(let j = 0;j<6;j++){\n            const bitOffset = j\n\n            charBitArray.push(bitArray[charOffset + bitOffset])\n        }\n\n        chars.push(generateCharacterFromBitArray(charBitArray))\n    }\n\n    return decodeString(chars.join(\"\"))\n}\n\n// generate a bit array from the hash of the given form\nconst generateBitArrayFromFormHash = (form) => {\n    const hashInput = JSON.stringify(form)\n\n    const hashOutput = stringHash(hashInput)\n\n    return generateBitArrayFromNumber(hashOutput, 32)\n}\n\n// generate a bit array from the given value and data type identifier\nconst generateBitArrayFromValueAndType = (value, type) => {\n    if(type == \"boolean\"){\n        return [ value ? 1 : 0 ]\n    } else if(type == \"string\"){\n        return generateBitArrayFromString(value)\n    } else if(type == \"1bit\"){\n        return generateBitArrayFromNumber(value, 1)\n    } else if(type == \"2bit\"){\n        return generateBitArrayFromNumber(value, 2)\n    } else if(type == \"4bit\"){\n        return generateBitArrayFromNumber(value, 4)\n    } else if(type == \"6bit\"){\n        return generateBitArrayFromNumber(value, 6)\n    } else if(type == \"8bit\"){\n        return generateBitArrayFromNumber(value, 8)\n    } else if(type == \"16bit\"){\n        return generateBitArrayFromNumber(value, 16)\n    }\n}\n\n// generate a value from the given bit array and data type identifier\nconst generateValueFromBitArrayAndType = (bitArray, type) => {\n    if(type == \"boolean\"){\n        return bitArray[0] == 1\n    } else if(type == \"string\"){\n        return generateStringFromBitArray(bitArray)\n    } else if(type == \"1bit\" || type == \"2bit\" || type == \"4bit\" || type == \"6bit\" || type == \"8bit\" || type == \"16bit\"){\n        return generateNumberFromBitArray(bitArray)\n    }\n}\n\n// generate a bit array from the given data\nconst generateBitArrayFromData = (data) => {\n    const hashBitArray = generateBitArrayFromFormHash(data.form)\n\n    const idBitArray = generateBitArrayFromNumber(data.id, 16)\n\n    const entryBitArrays = [] // array of bit arrays for each entry in the data\n\n    if (data.entries.length != data.form.length) throw new Error(\"Expected data and form to be the same size\")\n\n    for(let i = 0;i<data.entries.length;i++){\n        const value = data.entries[i]\n        const type = data.form[i].dataType\n\n        entryBitArrays.push(generateBitArrayFromValueAndType(value, type))\n    }\n\n    const bitArray = [hashBitArray, idBitArray, ...entryBitArrays].flat()\n\n    return bitArray\n}\n\n// generate data from the given bit array and form\nconst generateDataFromBitArray = (bitArray, form) => {\n    const hash = generateNumberFromBitArray(bitArray.splice(0, 32))\n    const expectedHash = generateNumberFromBitArray(generateBitArrayFromFormHash(form))\n\n    if (hash != expectedHash) return null\n\n    const id = generateNumberFromBitArray(bitArray.splice(0, 16))\n\n    const entries = []\n\n    for(let i = 0;i<form.length;i++){\n        const type = form[i].dataType\n\n        let entrySize = 0\n\n        if(type == \"boolean\"){\n            entrySize = 1\n        } else if(type == \"string\"){\n            const stringSizeHeader = bitArray.splice(0, 8)\n            \n            entrySize = 6 * generateNumberFromBitArray(stringSizeHeader)\n        } else if(type == \"1bit\"){\n            entrySize = 1\n        } else if(type == \"2bit\"){\n            entrySize = 2\n        } else if(type == \"4bit\"){\n            entrySize = 4\n        } else if(type == \"6bit\"){\n            entrySize = 6\n        } else if(type == \"8bit\"){\n            entrySize = 8\n        } else if(type == \"16bit\"){\n            entrySize = 16\n        }\n\n        const entryBitArray = bitArray.splice(0, entrySize)\n        const entryValue = generateValueFromBitArrayAndType(entryBitArray, type)\n\n        entries.push(entryValue)\n    }\n\n    return {\n        id,\n        entries\n    }\n}\n\n// convert the given bit array to an array of bytes (byte order left to right, bit order right to left)\nconst bitArrayToBuffer = (bitArray) => {\n    const bytes = []\n\n    // pad to make sure last byte is full\n    const paddingNeeded = 8 - (bitArray.length % 8)\n\n    for(let i = 0;i<paddingNeeded;i++){\n        bitArray.push(0)\n    }\n\n    for(let i = 0;i<bitArray.length / 8;i++){\n        const byteOffset = 8 * i\n\n        const byteBitArray = []\n\n        for(let j = 0;j<8;j++){\n            const bitOffset = j\n\n            byteBitArray.push(bitArray[byteOffset + bitOffset])\n        }\n        \n        bytes.push(generateNumberFromBitArray(byteBitArray))\n    }\n\n    return String.fromCharCode(...bytes)\n}\n\n// convert the given buffer of bytes to an array of bits (byte order left to right, but order right to left)\nconst bufferToBitArray = (buffer) => {\n    const byteArray = []\n\n    for(let i = 0;i<buffer.length;i++){\n        byteArray.push(generateBitArrayFromNumber(buffer[i], 8))\n    }\n    \n    const bitArray = byteArray.flat()\n\n    return bitArray\n}\n\n// generate a buffer from the given data\nconst generateBufferFromData = (data) => {\n    const buffer = bitArrayToBuffer(generateBitArrayFromData(data))\n\n    return buffer\n}\n\n// generate data from the given buffer and form\nconst generateDataFromBuffer = (buffer, form) => {\n    const bitArray = bufferToBitArray(buffer)\n\n    const data = generateDataFromBitArray(bitArray, form)\n\n    return data\n}\n\nexport {\n    generateBufferFromData,\n    generateDataFromBuffer\n}","import React, { useState, useEffect } from \"react\"\n\nimport { SafeAreaView, View, ScrollView, Text, StyleSheet } from \"react-native\"\n\nimport MatchListItem from \"../components/ScoutListItem\"\nimport Button from \"../components/Button\"\n\nimport { getSchema, getEntries, setSchema } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\nimport { generateDataFromBuffer } from \"../scripts/dataBuffer\"\n\nconst DefaultStack = ({ route, navigation }) => {\n    const { mode } = route.params\n\n    const [form, setForm] = useState([])\n    const [entries, setEntries] = useState([])\n\n    useEffect(() => {\n        const pullLatestSchemaAndEntries = () => {\n            getSchema(mode).then(storedSchema => {\n                setForm(storedSchema)\n\n                const filteredSchema = storedSchema.filter(e => e.ui.type != \"header\") || []\n\n                getEntries(mode).then(storedEntries => {\n                    const filteredEntries = storedEntries.filter((storedEntry) => {\n                        const buffer = []\n                        \n                        for (let i = 0;i<storedEntry.buffer.length;i++) buffer.push(storedEntry.buffer.charCodeAt(i))\n\n                        return generateDataFromBuffer(buffer, filteredSchema) != null\n                    })\n\n                    setEntries(filteredEntries)\n                })\n            })\n        }\n\n        pullLatestSchemaAndEntries()\n\n        navigation.addListener(\"state\", pullLatestSchemaAndEntries)\n    }, [])\n\n    const matchListItemRenders = []\n\n    entries.reverse().forEach(entry => {\n        matchListItemRenders.push(\n            <MatchListItem key={entry.id} matchTimestamp={entry.id} data={entry.buffer} navigation={navigation} mode={mode} />\n        )\n    })\n\n    return (\n        <SafeAreaView style={styles.wrapper}>\n            <View style={styles.headerContainer}>\n                <Text style={styles.headerText}>{ mode } Scouting Hub</Text>\n            </View>\n            <ScrollView style={{ backgroundColor: colors.grey }}>\n                <Button handlePress={() => navigation.push(\"DataEntry\", { form, mode })}>Start { mode } Scouting</Button>\n                <Button handlePress={() => navigation.push(\"UploadSchema\", { mode })}>Upload { mode } Schema</Button>\n                <View style={{ height: 6 }} />\n                {\n                    matchListItemRenders.length > 0 ?\n                        matchListItemRenders :\n                        <React.Fragment>\n                            <View style={{ marginTop: 4, height: 1, backgroundColor: colors.crimson }} />\n                            <Text style={styles.emptyList}>No Scouting Entries Yet</Text>\n                        </React.Fragment>\n                }\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        flex: 1,\n        backgroundColor: colors.white\n    },\n    headerContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 70,\n        backgroundColor: colors.white,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.crimson\n    },\n    headerText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 24,\n        color: colors.black\n    },\n    emptyList: {\n        marginTop: 20,\n        fontFamily: \"Open Sans\",\n        fontSize: 24,\n        color: colors.crimson,\n        textAlign: \"center\"\n    }\n})\n\nexport default DefaultStack","import React, { useState, useEffect, useRef } from \"react\"\n\nimport { TouchableWithoutFeedback, View, Text, TextInput, StyleSheet } from \"react-native\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faMinus, faPlus, faRepeat, faPlay, faPause, faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\n\nimport format from \"format-duration\"\n\nimport { screen, colors } from \"../constants\"\n\nconst FormHeader = ({ title, setValue }) => {\n    return (\n        <View style={styles.headerContainer} onLayout={(e) => {\n            // store the scroll offset here for convenience, it won't be included in upload data\n            setValue(e.nativeEvent.layout.y)\n        }}>\n            <Text style={styles.headerText} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n        </View>\n    )\n}\n\nconst FormTextInput = ({ title, maxLength, value, setValue }) => {\n    const inputRef = useRef()\n\n    const focus = () => inputRef.current.focus()\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <TouchableWithoutFeedback onPress={focus}>\n                <View style={styles.inputTextContainer}>\n                    <TextInput ref={inputRef} maxLength={maxLength} value={value} onChangeText={setValue} style={styles.inputText} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline />\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}\n\nconst FormNumberInput = ({ title, value, setValue, dataType }) => {\n    const inputRef = useRef()\n\n    const focus = () => inputRef.current.focus()\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const setInputValue = (v) => {\n        const num = parseFloat(v)\n        if(isNaN(num)){\n            setValue(0)\n        } else {\n            setValue(clampInputValue(num))\n        }\n    }\n\n    const minus = () => {\n        if(value > 0){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n            setValue(clampInputValue(value - 1))\n        }\n    }\n\n    const plus = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setValue(clampInputValue(value + 1))\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.multiControlInputContainer}>\n                <TouchableWithoutFeedback onPress={focus}>\n                    <View style={styles.inputTextContainer}>\n                        <TextInput ref={inputRef} value={value.toString()} onChangeText={setInputValue} style={styles.inputText} cursorColor={colors.crimson} selectionColor={colors.crimson} color multiline keyboardType={\"numeric\"} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={minus}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faMinus} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={plus}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faPlus} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormTimerInput = ({ title, value, setValue, dataType }) => {\n    const [running, setRunning] = useState(false)\n\n    const [startTimestep, setStartTimestep] = useState(0)\n\n    useEffect(() => {\n        if(running){\n            const interval = setInterval(() => {\n                setValue(clampInputValue(Math.round((Date.now() - startTimestep) / 1000)))\n            }, 500)\n\n            return () => clearInterval(interval)\n        }\n    }, [running, startTimestep])\n\n    const restart = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setValue(0)\n        setStartTimestep(Date.now())\n    }\n\n    const start = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setRunning(true)\n        setValue(0)\n        setStartTimestep(Date.now())\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const stop = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setRunning(false)\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.multiControlInputContainer}>\n                <View style={styles.inputTextContainer}>\n                    <Text style={styles.inputText}>\n                        {\n                            format(value * 1000, { leading: true })\n                        }\n                    </Text>\n                </View>\n                <TouchableWithoutFeedback onPress={restart}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={faRepeat} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={running ? stop : start}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={running ? faPause : faPlay} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormSliderInput = ({ title, value, setValue, dataType }) => {\n    const min = 0\n    const max = 10\n    const step = 1\n\n    const [touchX, setTouchX] = useState(0)\n\n    const handleTouchStart = (e) => {\n        setTouchX(e.nativeEvent.touches[0].pageX)\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const handleTouchMove = (e) => {\n        const screenWidth = screen.width - 60 - 10\n        const deltaX = e.nativeEvent.touches[0].pageX - touchX\n\n        const newValue = Math.max(Math.min(value + (deltaX / screenWidth) * (max - min), max), min)\n\n        if(Math.round(value / step) != Math.round(newValue / step)){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n\n        setValue(clampInputValue(newValue))\n        setTouchX(e.nativeEvent.touches[0].pageX)\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={{ width: \"100%\" }}>\n                <View style={[{ width: 40, alignItems: \"center\" }, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) - 5 }] }]}>\n                    <Text style={styles.sliderLabel}>\n                        {\n                            step * Math.round(value / step)\n                        }\n                    </Text>\n                </View>\n            </View>\n            <TouchableWithoutFeedback>\n                <View style={styles.sliderInputContainer}>\n                    <View style={styles.sliderTrackBar} />\n                    <TouchableWithoutFeedback>\n                        <View style={[styles.sliderInputThumb, { transform: [{ translateX: (screen.width - 60 - 10) * (step * Math.round(value / step) - min) / (max - min) }] }]} onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} />\n                    </TouchableWithoutFeedback>\n                </View>\n            </TouchableWithoutFeedback>\n        </View>\n    )\n}\n\nconst FormToggleInput = ({ title, value, setValue }) => {\n    const setToFalse = () => {\n        if(value){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n        setValue(false)\n    }\n\n    const setToTrue = () => {\n        if(!value){\n            // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        }\n        setValue(true)\n    }\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={styles.toggleButtonsContainer}>\n                <TouchableWithoutFeedback onPress={setToFalse}>\n                    <View style={[styles.toggleButtonContainer, { borderColor: !value ? colors.crimson : colors.white, backgroundColor: !value ? colors.pink : colors.white }]}>\n                        <Text style={styles.toggleButtonText}>False</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n                <TouchableWithoutFeedback onPress={setToTrue}>\n                    <View style={[styles.toggleButtonContainer, { borderColor: value ? colors.crimson : colors.white, backgroundColor: value ? colors.pink : colors.white }]}>\n                        <Text style={styles.toggleButtonText}>True</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n        </View>\n    )\n}\n\nconst FormRadioInput = ({ title, options, value, setValue, dataType }) => {\n    const optionRenders = []\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    options.forEach((option, index) => {\n        const setSelectedOption = () => {\n            if(value != index){\n                // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n            }\n            setValue(clampInputValue(index))\n        }\n\n        optionRenders.push(\n            <TouchableWithoutFeedback key={index} onPress={setSelectedOption}>\n                <View style={[styles.radioOptionButtonContainer, { borderColor: index == value ? colors.crimson : colors.white, backgroundColor: index == value ? colors.pink : colors.white }]}>\n                    <Text style={styles.radioOptionButtonText}>\n                        {\n                            option\n                        }\n                    </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        )\n    })\n\n    return (\n        <View style={[styles.inputContainer, { paddingBottom: 0 }]}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            {\n                optionRenders\n            }\n        </View>\n    )\n}\n\nconst FormDropdownInput = ({ title, options, value, setValue, dataType }) => {\n    const [menuOpen, setMenuOpen] = useState(false)\n\n    const toggleMenu = () => {\n        // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n        setMenuOpen(!menuOpen)\n    }\n\n    const maxValue = Math.pow(2, parseInt(dataType.split(\"bit\")[0])) - 1\n    const clampInputValue = (v) => {\n        if (v < 0) return 0\n        if (v >= maxValue) return maxValue\n        return v\n    }\n\n    const optionRenders = []\n    options.forEach((option, index) => {\n        const selectOption = () => {\n            setValue(clampInputValue(index))\n            toggleMenu()\n        }\n\n        optionRenders.push(\n            <TouchableWithoutFeedback key={index} onPress={selectOption}>\n                <View style={[styles.dropdownOptionContainer, { backgroundColor: index == value ? colors.pink : colors.white, borderColor: index == value ? colors.crimson : colors.white }]}>\n                    <Text style={styles.dropdownOptionText}>\n                        {\n                            option\n                        }\n                    </Text>\n                </View>\n            </TouchableWithoutFeedback>\n        )\n    })\n\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.inputTitle} numberOfLines={1}>\n                {\n                    title\n                }\n            </Text>\n            <View style={[styles.multiControlInputContainer, { marginBottom: menuOpen ? 5 : 0 }]}>\n                <View style={{ ...styles.inputTextContainer, height: 48, justifyContent: \"center\" }}>\n                    <Text style={styles.inputText}>\n                        {\n                            options[value]\n                        }\n                    </Text>\n                </View>\n                <TouchableWithoutFeedback onPress={toggleMenu}>\n                    <View style={styles.controlButton}>\n                        <FontAwesomeIcon icon={menuOpen ? faChevronUp : faChevronDown} color={colors.crimson} size={22} />\n                    </View>\n                </TouchableWithoutFeedback>\n            </View>\n            {\n                menuOpen && optionRenders\n            }\n        </View>\n    )\n}\n\nconst Input = (props) => {\n    let Component = () => null\n\n    switch(props.ui.type){\n        case \"header\":\n            Component = FormHeader\n            break\n        case \"text\":\n            Component = FormTextInput\n            break\n        case \"number\":\n            Component = FormNumberInput\n            break\n        case \"timer\":\n            Component = FormTimerInput\n            break\n        case \"slider\":\n            Component = FormSliderInput\n            break\n        case \"toggle\":\n            Component = FormToggleInput\n            break\n        case \"radio\":\n            Component = FormRadioInput\n            break\n        case \"dropdown\":\n            Component = FormDropdownInput\n            break\n    }\n\n    return Component({ ...props, ...props.ui, title: props.title })\n}\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n        width: \"100%\",\n        height: 60,\n        marginTop: 10,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    headerText: {\n        paddingHorizontal: 20,\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 24,\n        color: colors.crimson,\n        textDecorationLine: \"underline\",\n        textDecorationColor: colors.crimson\n    },\n    inputContainer: {\n        margin: 10,\n        marginBottom: 0,\n        padding: 10,\n        borderRadius: 10,\n        backgroundColor: colors.white\n    },\n    inputTitle: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"400\",\n        color: colors.black,\n        fontSize: 20,\n        marginBottom: 10\n    },\n    inputTextContainer: {\n        flex: 1,\n        padding: 10,\n        borderWidth: 1,\n        borderColor: colors.crimson,\n        borderRadius: 10\n    },\n    inputText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontStyle: \"italic\",\n        fontSize: 16,\n        color: colors.black\n    },\n    multiControlInputContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n    },\n    controlButton: {\n        width: 48,\n        height: 48,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginLeft: 10,\n        borderWidth: 1,\n        borderColor: colors.crimson,\n        borderRadius: 10\n    },\n    sliderLabel: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 16,\n        color: colors.black,\n        marginTop: 5\n    },\n    sliderInputContainer: {\n        width: \"100%\",\n        height: 30,\n        marginTop: 5,\n        justifyContent: \"center\"\n    },\n    sliderInputThumb: {\n        position: \"absolute\",\n        width: 30,\n        height: 30,\n        borderWidth: 2.5,\n        borderColor: colors.crimson,\n        borderRadius: 10,\n        backgroundColor: colors.pink\n    },\n    sliderTrackBar: {\n        width: \"100%\",\n        height: 4,\n        borderRadius: 2,\n        backgroundColor: colors.dark\n    },\n    toggleButtonsContainer: {\n        width: \"100%\",\n        height: 50,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    toggleButtonContainer: {\n        width: 0.5 * (screen.width - 40) - 5,\n        height: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: 10,\n        borderWidth: 2.5\n    },\n    toggleButtonText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 20,\n        color: colors.black\n    },\n    radioOptionButtonContainer: {\n        width: \"100%\",\n        height: 50,\n        justifyContent: \"center\",\n        marginBottom: 10,\n        borderRadius: 10,\n        borderWidth: 2.5\n    },\n    radioOptionButtonText: {\n        paddingHorizontal: 20,\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 18,\n        color: colors.black\n    },\n    dropdownOptionContainer: {\n        marginTop: 5,\n        padding: 10,\n        borderWidth: 2.5,\n        borderRadius: 10\n    },\n    dropdownOptionText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 16,\n        color: colors.black\n    }\n})\n\nexport default Input","import React, { useRef, useState, useEffect, useCallback } from \"react\"\n\nimport { TouchableWithoutFeedback, ScrollView, View, Text, StyleSheet } from \"react-native\"\n\nimport Input from \"../components/Input\"\n\nimport { generateBufferFromData } from \"../scripts/dataBuffer\"\nimport { addEntry } from \"../scripts/storage\"\n\nimport { screen, colors } from \"../constants\"\n\nconst DataEntryStack = ({ route, navigation }) => {\n    const ref = useRef()\n\n    const { form, mode } = route.params\n    const [inputState, setInputState] = useState([]) // stores relative render y of headers, stored here for convenience\n\n    const rawKeyboardHeight = 80 // hardcoded since dynamic one causes internal memory leak\n    const keyboardHeight = Math.max(0, rawKeyboardHeight - (70 + screen.bottom))\n\n    useEffect(() => {\n        const defaultInputs = []\n\n        form.forEach(input => {\n            let defaultInput = null\n            \n            switch(input.ui.type){\n                case \"text\":\n                    defaultInput = \"\"\n                    break\n                case \"number\":\n                    defaultInput = 0\n                    break\n                case \"timer\":\n                    defaultInput = 0\n                    break\n                case \"slider\":\n                    defaultInput = 0\n                    break\n                case \"toggle\":\n                    defaultInput = false\n                    break\n                case \"radio\":\n                    defaultInput = 0\n                    break\n                case \"dropdown\":\n                    defaultInput = 0\n                    break\n            }\n\n            defaultInputs.push(defaultInput)\n        })\n\n        setInputState(defaultInputs)\n    }, [])\n\n    const setInput = (index, value) => {\n        setInputState((iS) => {\n            const temp = [...iS]\n            temp[index] = value\n            return temp\n        })\n    }\n\n    const [saved, setSaved] = useState(false)\n    const saveInputs = () => {\n        if (saved) return\n        \n        setSaved(true)\n\n        const id = Date.now()\n\n        const inputs = []\n        form.forEach((question, index) => {\n            if (question.ui.type != \"header\") inputs.push(typeof inputState[index] == \"number\" ? Math.round(inputState[index]) : inputState[index])\n        })\n\n        const buffer = generateBufferFromData({\n            form: form.filter(question => question.ui.type != \"header\"),\n            id,\n            entries: inputs\n        })\n\n        addEntry({\n            id,\n            buffer\n        }, mode).then(navigation.goBack)\n    }\n\n    const linkRenders = []\n    form.forEach((item, index) => {\n        if(item.ui.type == \"header\"){\n            linkRenders.push(\n                <TouchableWithoutFeedback key={index} onPress={() => {\n                    // ReactNativeHapticFeedback.trigger(\"impactLight\", { enableVibrateFallback: false })\n                    ref.current.scrollTo({\n                        x: 0,\n                        y: inputState[index] - 10,\n                        animated: true\n                    })\n                }}>\n                    <View style={styles.linkContainer}>\n                        <Text style={styles.linkText}>\n                            {\n                                item.title\n                            }\n                        </Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            )\n        }\n    })\n\n    const inputRenders = []\n    inputState.forEach((item, index) => {\n        inputRenders.push(\n            <Input key={index} value={item} setValue={value => setInput(index, value)} {...form[index]} />\n        )\n    })\n\n    return (\n        <View style={{ flex: 1 }}>\n            {\n                linkRenders.length > 0 ? (\n                    <View><ScrollView style={styles.linksContainer} contentContainerStyle={{ paddingRight: 10 }} horizontal showsHorizontalScrollIndicator={false} children={linkRenders} /></View>\n                ) : <View style={{ height: 1, backgroundColor: colors.crimson }} />\n            }\n            <ScrollView ref={ref} style={styles.inputsContainer} scrollEnabled showsVerticalScrollIndicator={false}>\n                {\n                    inputRenders\n                }\n                <TouchableWithoutFeedback onPress={saveInputs}>\n                    <View style={[styles.buttonContainer, { marginBottom: 20 + rawKeyboardHeight }]}>\n                        <Text style={styles.buttonText}>Save</Text>\n                    </View>\n                </TouchableWithoutFeedback>\n            </ScrollView>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    inputsContainer: {\n        flexGrow: 1,\n        backgroundColor: colors.grey\n    },\n    linksContainer: {\n        width: \"100%\",\n        height: 80,\n        paddingVertical: 10,\n        backgroundColor: colors.white,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.crimson\n    },\n    linkContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        paddingHorizontal: 20,\n        marginLeft: 10,\n        backgroundColor: colors.pink,\n        borderRadius: 10,\n        borderWidth: 2,\n        borderColor: colors.crimson\n    },\n    linkText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"500\",\n        fontSize: 18,\n        color: colors.black\n    },\n    buttonContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 120,\n        margin: 20,\n        borderRadius: 20,\n        borderWidth: 2,\n        borderColor: colors.crimson,\n        backgroundColor: colors.white\n    },\n    buttonText: {\n        fontFamily: \"Open Sans\",\n        fontWeight: \"700\",\n        fontSize: 20,\n        color: colors.crimson\n    }\n})\n\nexport default DataEntryStack","import React, { useState } from \"react\"\n\nimport { View, TextInput, StyleSheet, Alert, TouchableWithoutFeedback, Keyboard } from \"react-native\"\n\nimport Button from \"../components/Button\"\n\nimport { setSchema } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\n\nconst UploadSchemaStack = ({ route, navigation }) => {\n    const { mode } = route.params\n\n    const [inputSchemaURL, setInputSchemaURL] = useState(\"\")\n\n    const [uploaded, setUploaded] = useState(false)\n    const uploadSchema = async () => {\n        if (uploaded) return\n\n        setUploaded(true)\n\n        const validationStatus = await setSchema(inputSchemaURL, mode)\n\n        if(validationStatus.success){\n            navigation.goBack()\n        } else {\n            alert(\"Failed To Upload Schema\\n\\n\" + validationStatus.reason)\n            // Alert.alert(\"Failed To Upload Schema\", status.reason)\n\n            setUploaded(false)\n        }\n    }\n\n    return (\n        // <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <View style={styles.wrapper}>\n                <TextInput style={styles.input} placeholder={\"Paste URL to schema for \" + mode + \" Scouting here\"} placeholderTextColor={colors.dark} value={inputSchemaURL} onChangeText={setInputSchemaURL} multiline />\n                <Button handlePress={uploadSchema}>Upload</Button>\n            </View>\n        // </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: \"100%\",\n        flex: 1,\n        backgroundColor: colors.white\n    },\n    input: {\n        margin: 10,\n        padding: 10,\n        maxHeight: 200,\n        borderRadius: 10,\n        backgroundColor: colors.grey\n    }\n})\n\nexport default UploadSchemaStack","import QRCode from \"react-native-qrcode-svg\"\n\nimport { colors } from \"../constants\"\n\nconst QR = ({ data }) => <QRCode value={data} ecl={\"M\"} size={300} color={colors.black} backgroundColor={colors.white} />\n\nexport default QR","import React, { useState } from \"react\"\n\nimport { View, Text, StyleSheet, Alert } from \"react-native\"\n\nimport QR from \"../components/QR\"\nimport Button from \"../components/Button\"\n\nimport { removeEntry } from \"../scripts/storage\"\n\nimport { colors } from \"../constants\"\n\nconst OpenQrStack = ({ route, navigation }) => {\n    const { id, data, mode } = route.params\n\n    const [deleted, setDeleted] = useState(false)\n    const handleDelete = () => {\n        if (deleted) return\n\n        setDeleted(true)\n\n        confirm(\"Are You Sure?\\n\\nIf you delete this qr code all of the scouting information for this entry will be lost.\") ? removeEntry(id, mode).then(navigation.goBack) : setDeleted(false)\n\n        // Alert.alert(\"Are You Sure?\", \"If you delete this qr code all of the scouting information for this entry will be lost.\", [\n        //     {\n        //         text: \"Cancel\",\n        //         style: \"cancel\",\n        //         onPress: () => setDeleted(false)\n        //     },\n        //     {\n        //         text: \"Yes\",\n        //         onPress: () => removeEntry(id, mode).then(navigation.goBack)\n        //     }\n        // ])\n    }\n\n    return (\n        <View style={styles.wrapper}>\n            <QR data={data} />\n            <View style={{ width: 300, marginTop: 10 }}>\n                <Button handlePress={handleDelete} marginHorizontal={0}>Delete</Button>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        width: \"100%\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.white\n    }\n})\n\nexport default OpenQrStack","import React from \"react\"\n\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\n\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport DefaultStack from \"../stacks/Default\"\nimport DataEntry from \"../stacks/DataEntry\"\nimport UploadSchema from \"../stacks/UploadSchema\"\nimport OpenQr from \"../stacks/OpenQr\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { screen, colors } from \"../constants\"\n\nconst MatchTab = () => {\n    const Stack = createStackNavigator()\n    \n    return (\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\n            headerShown: false\n        }}>\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Match\" }} component={DefaultStack} />\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\n                headerShown: true,\n                headerTitle: \"Scouting Form\",\n                headerStyle: {\n                    height: 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                gestureEnabled: false,\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\n                            //     {\n                            //         text: \"Cancel\",\n                            //         style: \"cancel\"\n                            //     },\n                            //     {\n                            //         text: \"Yes\",\n                            //         onPress\n                            //     }\n                            // ])\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\n                headerShown: true,\n                headerTitle: \"Upload Schema\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\n                headerShown: true,\n                headerTitle: \"Scan QR Code\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n        </Stack.Navigator>\n    )\n}\n\nexport default MatchTab","import React from \"react\"\n\nimport { TouchableWithoutFeedback, View, Alert } from \"react-native\"\n\nimport { createStackNavigator } from \"@react-navigation/stack\"\n\nimport DefaultStack from \"../stacks/Default\"\nimport DataEntry from \"../stacks/DataEntry\"\nimport UploadSchema from \"../stacks/UploadSchema\"\nimport OpenQr from \"../stacks/OpenQr\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { screen, colors } from \"../constants\"\n\nconst MatchTab = () => {\n    const Stack = createStackNavigator()\n    \n    return (\n        <Stack.Navigator initialRouteName={\"Default\"} screenOptions={{\n            headerShown: false\n        }}>\n            <Stack.Screen name={\"Default\"} initialParams={{ mode: \"Pit\" }} component={DefaultStack} />\n            <Stack.Screen name={\"DataEntry\"} component={DataEntry} options={{\n                headerShown: true,\n                headerTitle: \"Scouting Form\",\n                headerStyle: {\n                    height: 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                gestureEnabled: false,\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            if (confirm(\"Are You Sure?\\n\\nIf you exit the page all of the scouting information for this entry will be lost.\")) onPress()\n                            // Alert.alert(\"Are You Sure?\", \"If you exit the page all of the scouting information for this entry will be lost.\", [\n                            //     {\n                            //         text: \"Cancel\",\n                            //         style: \"cancel\"\n                            //     },\n                            //     {\n                            //         text: \"Yes\",\n                            //         onPress\n                            //     }\n                            // ])\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"UploadSchema\"} component={UploadSchema} options={{\n                headerShown: true,\n                headerTitle: \"Upload Schema\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n            <Stack.Screen name={\"OpenQr\"} component={OpenQr} options={{\n                headerShown: true,\n                headerTitle: \"Scan QR Code\",\n                headerStyle: {\n                    height: screen.top + 70,\n                    backgroundColor: colors.white,\n                    shadowOpacity: 0\n                },\n                headerTitleStyle: {\n                    fontFamily: \"Open Sans\",\n                    fontWeight: \"700\",\n                    fontSize: 24,\n                    color: colors.black\n                },\n                headerLeft: ({ onPress }) => {\n                    return (\n                        <TouchableWithoutFeedback onPress={() => {\n                            // ReactNativeHapticFeedback.trigger(\"impactMedium\", { enableVibrateFallback: false })\n                            onPress()\n                        }}>\n                            <View style={{ flex: 1, width: 80, alignItems: \"center\", justifyContent: \"center\" }}>\n                                <FontAwesomeIcon icon={faChevronLeft} size={24} color={colors.crimson} />\n                            </View>\n                        </TouchableWithoutFeedback>\n                    )\n                }\n            }} />\n        </Stack.Navigator>\n    )\n}\n\nexport default MatchTab","import React, { useCallback } from \"react\"\nimport { View } from \"react-native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as SplashScreen from \"expo-splash-screen\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\"\nimport { faChessKnight, faComments, faGear } from \"@fortawesome/free-solid-svg-icons\"\n\nimport MatchTab from \"./src/tabs/Match\"\nimport PitTab from \"./src/tabs/Pit\"\n\nimport { colors } from \"./src/constants\"\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({ \"Open Sans\": require(\"./assets/fonts/OpenSans.ttf\") })\n    \n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) await SplashScreen.hideAsync()\n    }, [fontsLoaded])\n    \n    if (!fontsLoaded) return null\n\n    const Tab = createBottomTabNavigator()\n\n    const icons = {\n        \"Match\": faChessKnight,\n        \"Pit\": faComments,\n        \"Settings\": faGear\n    }\n    \n    return (\n        <View style={{ flex: 1 }} onLayout={onLayoutRootView}>\n            <NavigationContainer>\n                <Tab.Navigator initialRouteName={\"Match\"} screenOptions={({ route }) => {\n                    return {\n                        headerShown: false,\n                        tabBarInactiveTintColor: colors.dark,\n                        tabBarActiveTintColor: colors.crimson,\n                        tabBarStyle: {\n                            paddingTop: 10,\n                            marginBottom: 10,\n                            borderTopWidth: 1,\n                            borderTopColor: colors.crimson\n                        },\n                        tabBarLabelStyle: {\n                            marginTop: 6\n                        },\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <FontAwesomeIcon icon={icons[route.name]} color={color} size={size} />\n                            )\n                        }\n                    }\n                }}>\n                    <Tab.Screen name={\"Match\"} component={MatchTab} />\n                    <Tab.Screen name={\"Pit\"} component={PitTab} />\n                </Tab.Navigator>\n            </NavigationContainer>\n        </View>\n    )\n}\n\nexport default App","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [935], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screen","window","innerWidth","innerHeight","colors","styles","StyleSheet","create","wrapper","position","marginTop","undershadow","width","height","backgroundColor","borderRadius","container","flexDirection","alignItems","justifyContent","paddingHorizontal","date","fontFamily","fontSize","color","_ref","matchTimestamp","data","navigation","mode","pressInOffset","useRef","Animated","Value","current","Date","dateString","toDateString","getHours","getMinutes","_jsx","TouchableWithoutFeedback","onPress","push","id","onPressIn","timing","toValue","duration","useNativeDriver","start","onPressOut","children","_jsxs","View","style","_objectSpread","top","Text","FontAwesomeIcon","icon","faChevronRight","size","marginBottom","borderWidth","borderColor","text","fontWeight","handlePress","_ref$marginHorizontal","marginHorizontal","scale","transform","failureStatus","reason","success","schema","JSON","parse","e","Array","isArray","promptTitles","i","length","prompt","title","includes","ui","type","dataType","maxLength","options","every","option","expectedDataType","Math","pow","teamNamePrompt","find","matchNumberPrompt","getSchema","_asyncToGenerator","AsyncStorage","getAllKeys","getItem","setItem","stringify","_x","apply","arguments","setSchema","_ref2","schemaURL","_yield$to","to","axios","get","_yield$to2","_slicedToArray","err","res","status","validateSchema","_x2","_x3","getEntries","_ref3","entries","_x4","addEntry","_ref4","entry","updated","concat","_toConsumableArray","_x5","_x6","removeEntry","_ref5","filter","_x7","_x8","generateBitArrayFromNumber","number","bitCount","mutatedNumber","bitArray","fill","generateNumberFromBitArray","generateBitArrayFromCharacter","char","alphabetChars","numericChars","symbolChars","numberValue","indexOf","alphabetOffset","numericOffset","generateCharacterFromBitArray","chars","charCode","generateBitArrayFromFormHash","form","hashInput","hashOutput","stringHash","generateBitArrayFromValueAndType","value","string","encodedString","punctuationSpacesRemoved","toLowerCase","replace","forEach","punctuationMark","split","map","s","trim","join","encodeString","sizeBitArray","characterBitArrays","flat","generateBitArrayFromString","generateValueFromBitArrayAndType","charOffset","charBitArray","j","bitOffset","withSentenceFormatting","index","sentenceDelimiter","slice","toUpperCase","decodeString","generateStringFromBitArray","generateBufferFromData","buffer","bytes","paddingNeeded","byteOffset","byteBitArray","String","fromCharCode","bitArrayToBuffer","hashBitArray","idBitArray","entryBitArrays","Error","generateBitArrayFromData","generateDataFromBuffer","byteArray","bufferToBitArray","splice","entrySize","stringSizeHeader","entryBitArray","entryValue","generateDataFromBitArray","flex","headerContainer","borderBottomWidth","borderBottomColor","headerText","emptyList","textAlign","route","params","_useState","useState","_useState2","setForm","_useState3","_useState4","setEntries","useEffect","pullLatestSchemaAndEntries","then","storedSchema","filteredSchema","storedEntries","filteredEntries","storedEntry","charCodeAt","addListener","matchListItemRenders","reverse","MatchListItem","SafeAreaView","ScrollView","Button","React","FormHeader","setValue","onLayout","nativeEvent","layout","y","numberOfLines","FormTextInput","inputRef","inputContainer","inputTitle","focus","inputTextContainer","TextInput","ref","onChangeText","inputText","cursorColor","selectionColor","multiline","FormNumberInput","maxValue","parseInt","clampInputValue","v","multiControlInputContainer","toString","num","parseFloat","isNaN","keyboardType","controlButton","faMinus","faPlus","FormTimerInput","running","setRunning","startTimestep","setStartTimestep","interval","setInterval","round","now","clearInterval","format","leading","faRepeat","faPause","faPlay","FormSliderInput","_useState5","_useState6","touchX","setTouchX","translateX","sliderLabel","sliderInputContainer","sliderTrackBar","sliderInputThumb","onTouchStart","touches","pageX","onTouchMove","screenWidth","deltaX","newValue","max","min","FormToggleInput","_ref6","toggleButtonsContainer","toggleButtonContainer","toggleButtonText","FormRadioInput","_ref7","optionRenders","radioOptionButtonContainer","radioOptionButtonText","paddingBottom","FormDropdownInput","_ref8","_useState7","_useState8","menuOpen","setMenuOpen","toggleMenu","dropdownOptionContainer","dropdownOptionText","faChevronUp","faChevronDown","textDecorationLine","textDecorationColor","margin","padding","fontStyle","marginLeft","props","Component","inputsContainer","flexGrow","linksContainer","paddingVertical","linkContainer","linkText","buttonContainer","buttonText","_route$params","inputState","setInputState","defaultInputs","input","defaultInput","saved","setSaved","linkRenders","item","scrollTo","x","animated","inputRenders","Input","iS","temp","setInput","contentContainerStyle","paddingRight","horizontal","showsHorizontalScrollIndicator","scrollEnabled","showsVerticalScrollIndicator","inputs","question","goBack","maxHeight","inputSchemaURL","setInputSchemaURL","uploaded","setUploaded","uploadSchema","validationStatus","alert","placeholder","placeholderTextColor","QRCode","ecl","deleted","setDeleted","QR","confirm","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","initialParams","component","DefaultStack","DataEntry","headerTitle","headerStyle","shadowOpacity","headerTitleStyle","gestureEnabled","headerLeft","faChevronLeft","UploadSchema","OpenQr","_useFonts","useFonts","require","fontsLoaded","onLayoutRootView","useCallback","SplashScreen","Tab","createBottomTabNavigator","icons","faChessKnight","faComments","faGear","NavigationContainer","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarStyle","paddingTop","borderTopWidth","borderTopColor","tabBarLabelStyle","tabBarIcon","MatchTab","PitTab","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","key","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}